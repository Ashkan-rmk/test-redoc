{
  "openapi" : "3.0.0",
  "info" : {
    "title" : "مستندات سرویس‌های پلتفرم مالی پی‌پینگ",
    "description" : "مستندات سرویس‌های عمومی پلت‌فرم مالی پی‌پینگ\n\n لینک‌های پشتیبانی: تلگرام: [t.me/payping](t.me/payping) | ایمیل: [info@payping.ir]() | تلفن: 02175038797\n # مقدمه\n\n تمامی وب‌ سرویس‌های توضیح داده شده در این مستندات به صورت [RESTful](https://en.wikipedia.org/wiki/Representational_state_transfer) هستند و طبق همین چهارچوب باید با آنها ارتباط برقرار کرد.    \n جهت رفع هرگونه مشکل و یا پرسش با پشتیبانی در تماس باشید.\n\n # POSTMAN\n برای راحتی کار شما فایل postman سرویس ها برای شما آماده شده است که می توانید از لینک زیر آن را دانلود کنید و با استفاده از اپلیکیشن دسکتاپ [postman](https://www.getpostman.com) از آن استفاده کنید\n \n [دانلود قالب postman](https://os.payping.ir/files/PayPing API - v1.postman_collection.json)\n\n # توضیحات تکمیلی برای تمام سرویس‌ها\n\n برای فراخوانی سرویس‌های صفحه‌بندی (pagination) اگر پارامتر ورودی ارسال نشود، حداکثر ۱۰ آیتم نمایش داده می‌شود و همچنین حداکثر تعداد دریافت آیتم به ازای هر درخواست ۵۰ عدد می‌باشد و بیشتر از آن را سرویس پشتیبانی نمی‌کند و در صورت نیاز به بارگزاری تمام آیتم‌های یک سرویس به صورت یکجا با ایمیل به بخش پشتیبانی در تماس باشید. همینطور توجه داشته باشین واحد پول در تمام سرویس‌ها تومان می‌باشد و منطقه زمانی تمامی‌ تاریخ و ساعت‌ها برابر با ساعت جهانی یا UTC می‌باشد.\n\n # نکاتی برای آپلود فایل‌ها\n\n برای آپلود هرگونه فایل اعم از عکس پروفایل کاربران و یا گزارشات پرداخت‌ها و ... می‌بایست که از [سرویس بارگذاری فایل](#tag/Upload) استفاده کنید.\n \n پس از انجام عملیات آپلود توسط سرویس بارگذاری فایل، تنها کافیست نام فایل آپلود شده که در خروجی سرویس به شما برگردانده می‌شود را ذخیره نمایید.\n\n # جدول کدهای دریافتی از هر سرویس\n\n بعد از ارسال هر درخواست به سمت سرور، از سمت ما طبق قواعد وب‌سرویس‌های RESTful یک کدی به شما بازگرداننده می‌شود.\n هر کد معنایی دارد که در جدول زیر توضیحات مربوطه را می‌بینید\n\n |شماره کد|توضیحات|\n |-------|--------|\n |`200`| عملیات با موفقیت انجام شد |\n |`400`| مشکلی در ارسال درخواست وجود دارد |\n |`500`| مشکلی در سرور رخ داده است |\n |`503`| سرور در حال حاضر قادر به پاسخگویی نمی‌باشد |\n |`401`| عدم دسترسی|\n |`403`| دسترسی غیر مجاز |\n |`404`| آیتم درخواستی مورد نظر موجود نمی‌باشد |\n\n",
    "termsOfService" : "None",
    "version" : "v1",
    "x-logo" : {
      "url" : "https://cdn.payping.ir/statics/logo-padded.png"
    }
  },
  "servers" : [ {
    "url" : "https://api.payping.ir/"
  } ],
  "security" : [ {
    "Bearer" : ["profile", "email", "nationalcode", "birthday", "shaba", "phone", "pay:read", "pay:write", "product:read", "product:write", "customer:read", "customer:write", "invoice:read", "invoice:write", "upload:write" ]
  }, {
    "oauth2" : [ "profile", "email", "nationalcode", "birthday", "shaba", "phone", "pay:read", "pay:write", "product:read", "product:write", "customer:read", "customer:write", "invoice:read", "invoice:write", "upload:write" ]
  } ],
  "tags" : [ {
    "name" : "Payment",
    "description" : "متدهای مرتبط با تراکنش‌های مالی که شامل پرداخت پول، پرداخت تسهیمی و تمام فرآیندهای تایید یک تراکنش می‌باشد."
  }, {
    "name" : "Request",
    "description" : "متدهای مرتبط با درخواست پول از دیگران به صورتیکه برای آنها یک لینک پرداخت به صورت ایمیل و یا پیامک ارسال می‌شود."
  }, {
    "name" : "Withdraw",
    "description" : "متدهای مرتبط با درخواست تسویه حساب."
  }, {
    "name" : "Pos",
    "description" : "به کمک این متد می توانید یک درخواست تسویه با مبلغ دلخواه ایجاد نمایید"
  }, {
    "name" : "Report",
    "description" : "متدهای مرتبط با گزارش تراکنش‌های درخواست و یا پرداخت پول."
  }, {
    "name" : "product",
    "description" : "سرویس‌های عمومی بخش آیتم‌های مالی، لینک ثابت و سرویس‌های مربوط به پروسه پرداخت آنها"
  }, {
    "name" : "coupon",
    "description" : "سرویس‌های عمومی بخش کدهای تخفیف"
  }, {
    "name" : "Customer",
    "description" : "در این بخش میتوانید مشتریان خود را به صورت یک دفترچه سنتی مدیریت و در زمان صدور فاکتور از این لیست استفاده کنید."
  }, {
    "name" : "Invoice",
    "description" : "در این بخش میتوانید فاکتور بسازید و با انتخاب یک یا چند مشتری و حتی پست الکترونیک برای آنها فاکتور را ارسال کنید تا نسبت به پرداخت آن اقدام کنند."
  }, {
    "name" : "Schedule",
    "description" : "در این بخش میتوانید فاکتور های زمانبندی شده بسازید و با انتخاب یک یا چند مشتری و حتی پست الکترونیک برای آنها فاکتور را ارسال کنید تا نسبت به پرداخت آن اقدام کنند."
  }, {
    "name" : "Template",
    "description" : "در این بخش میتوانید قالب های آماده ای از فاکتور بسازید و در زمان ساخت فاکتور دیگر نیازی به تکمیل همه ی گزینه های فاکتور ندارید و فقط با انتخاب قالب فاکتور سریعتر فاکتور بسازید."
  }, {
    "name" : "Upload",
    "description" : "متدهای مرتبط با [آپلود فایل‌ها](#section/) ورودی تمام این سرویس‌ها به صورت formData می‌باشد."
  }],
  "paths" : {
    "/v1/pay" : {
      "post" : {
        "tags" : [ "Payment" ],
        "summary" : "ساخت پرداخت",
        "description" : "به کمک این متد می توانید برای یک نفر کد پرداخت ایجاد کنید.\r\nفراخوانی این متد برای شما یک کد 4 حرفی تولید می کند.\r\nپس از ساخت یک پرداخت، برای ورود به درگاه بانک تنها کافیست کاربر را به همراه کد ساخته شده به آدرس https://api.payping.ir/v1/pay/gotoipg/{code} هدایت نمایید.\r\nپس از اتمام فرایند در درگاه بانکی، کاربر به آدرسی که در ReturnUrl توسط شما مشخص شده است هدایت می شود\r\nکه حاوی دو پارامتر Refid, ClientRefId در قسمت QueryString آدرس می باشد.\r\nRefid مقداری است که برای تایید پرداخت (متد Verify) باید از آن استفاده کرد و \r\nClientRefId نیز همان مقداری است که در هنگام ساخته شدن پرداخت جدید از شما دریافت شده است.",
        "operationId" : "CreateSinglePayment",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePaymentViewModel"
        },
        "responses" : {
          "200" : {
            "description" : "پرداخت پول جدید با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/pay/verify" : {
      "post" : {
        "tags" : [ "Payment" ],
        "summary" : "تایید پرداخت",
        "description" : "از این متد برای تایید پرداخت موفق پس از بازگشت از درگاه بانکی استفاده می شود.\r\nدر صورتی که این متد تا 10 دقیقه پس از پرداخت فراخوانی نشود پرداخت باطل شده و پول به حساب پرداخت کننده باز خواهد گشت",
        "operationId" : "VerifyPayment",
        "requestBody" : {
          "description" : "مشخصات پرداخت",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/VerifyPaymentViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "تاییدیه آیتم مالی با موفقیت انجام شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/pay/multi" : {
      "post" : {
        "tags" : [ "Payment" ],
        "summary" : "ساخت پرداخت تسهیمی",
        "description" : "به کمک این متد می توانید برای یک پرداخت چند نفره (تسهیمی) کد پرداخت ایجاد کنید.\r\nفراخوانی این متد برای شما یک کد 4 حرفی تولید می کند.\r\nپس از ساخت یک پرداخت، برای ورود به درگاه بانک تنها کافیست کاربر را به همراه کد ساخته شده به آدرس https://api.payping.ir/v1/pay/gotoipg/{code} هدایت نمایید.\r\nپس از اتمام فرایند در درگاه بانکی، کاربر به آدرسی که در ReturnUrl توسط شما مشخص شده است هدایت می شود\r\nکه حاوی دو پارامتر Refid, ClientRefId در قسمت QueryString آدرس می باشد.\r\nRefid مقداری است که برای تایید پرداخت (متد Verify) باید از آن استفاده کرد و \r\nClientRefId نیز همان مقداری است که در هنگام ساخته شدن پرداخت جدید از شما دریافت شده است.",
        "operationId" : "CreateMultiPayment",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateMultiPaymentViewModel"
        },
        "responses" : {
          "200" : {
            "description" : "پرداخت پول جدید با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/pay/BlockMoney" : {
      "post" : {
        "tags" : [ "Payment" ],
        "summary" : "ساخت پرداخت مسدود شده",
        "description" : "به کمک این متد می تواندی برای پرادخت به چند نفر، کد پرداخت تولید کنید، که \r\nاین یک پرادخت مسدود شده می باشد و امکان جابجایی آن تا فراخوانی متد UnBlockMoney امکان پذیر نمی باشد.",
        "operationId" : "CreateBlockPayment",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreateMultiPaymentViewModel"
        },
        "responses" : {
          "200" : {
            "description" : "پرداخت پول جدید با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/pay/UnBlockMoney" : {
      "post" : {
        "tags" : [ "Payment" ],
        "summary" : "آزاد سازی پول مسدود شده",
        "description" : "به کمک این متد، می توانید پول مسدود شده توسط متد BlockMoney را از حالت مسدودی آزاد نمایید.",
        "operationId" : "UnBlockPayment",
        "requestBody" : {
          "description" : "مشخصات پرداخت",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/UnBlockMoneyViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "پرداخت پول جدید با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/pos" : {
      "post" : {
        "tags" : [ "Pos" ],
        "summary" : "ساخت پرداخت شناسه دار",
        "description" : "از این متد می تواند برای ساخت یک پرادخت شناسه دار که به کمک دستگاه Pos پرداخت آن انجام می شود، استفاده کرد",
        "operationId" : "CreateIdPosPayment",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/CreatePaymentViewModel"
        },
        "responses" : {
          "200" : {
            "description" : "پرداخت پول جدید با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/IPosPayResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/pay/{code}" : {
      "delete" : {
        "tags" : [ "Payment" ],
        "summary" : "برای لغو کردن یک کد پرداخت می توانید از این متد استفاده کنید",
        "operationId" : "CancelPayment",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کد پرداخت",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "عملیات لغو با موفقیت انجام شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/report/TransactionReport" : {
      "post" : {
        "tags" : [ "Report" ],
        "summary" : "گزارش تراکنش ها",
        "description" : "از این متد برای نمایش جزئیات تراکنش های کاربر استفاده می شود",
        "operationId" : "TransactionsReport",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionReportModel"
        },
        "responses" : {
          "200" : {
            "description" : "لیسات تراکنش ها با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TransactionReportViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:read" ]
        }, {
          "oauth2" : [ "pay:read" ]
        } ]
      }
    },
    "/v1/report/TransactionReportCount" : {
      "post" : {
        "tags" : [ "Report" ],
        "summary" : "تعداد تراکنش ها",
        "description" : "از این متد برای نمایش تعداد تراکنش های برگشت داده شده از متد TransactionReport استفاده می شود",
        "operationId" : "TransactionsReportCount",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BaseTransactionReport"
        },
        "responses" : {
          "200" : {
            "description" : "تعداد تراکنش ها با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResultVM"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:read" ]
        }, {
          "oauth2" : [ "pay:read" ]
        } ]
      }
    },
    "/v1/report/WithdrawTransactions" : {
      "post" : {
        "tags" : [ "Report" ],
        "summary" : "دریافت لیست تسویه حساب",
        "description" : "به کمک این متد می توانید لیست درخواست های تسویه شده و در انتظار تسویه را نمایش دهید",
        "operationId" : "WithdrawTransactionsReport",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/TransactionReportModel"
        },
        "responses" : {
          "200" : {
            "description" : "جزئیات تسویه با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/TransactionWithdrawDetailsViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:read" ]
        }, {
          "oauth2" : [ "pay:read" ]
        } ]
      }
    },
    "/v1/report/WithdrawTransactionsCount" : {
      "post" : {
        "tags" : [ "Report" ],
        "summary" : "تعداد لیست تسویه حساب",
        "description" : "به کمک این متد می توانید تعداد لیست درخواست های تسویه شده و در انتظار تسویه را که از متد WithdrawTransactions دریافت کرده اید را نمایش دهید",
        "operationId" : "WithdrawTransactionsCount",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/BaseTransactionReport"
        },
        "responses" : {
          "200" : {
            "description" : "جزئیات تسویه با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ResultVM"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:read" ]
        }, {
          "oauth2" : [ "pay:read" ]
        } ]
      }
    },
    "/v1/report/{code}" : {
      "get" : {
        "tags" : [ "Report" ],
        "summary" : "نمایش جزئیات تراکنش",
        "operationId" : "GetPaymentDetails",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کد پرداخت",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "جزئیات تراکنش با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/PaymentDetailsVM"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:read" ]
        }, {
          "oauth2" : [ "pay:read" ]
        } ]
      }
    },
    "/v1/request" : {
      "post" : {
        "tags" : [ "Request" ],
        "summary" : "ارسال درخواست پول",
        "description" : "از این متد برای ارسال لینک درخواست پول برای یک نفر بصورت  پیامک یا ایمیل استفاده می شود",
        "operationId" : "CreateRequest",
        "requestBody" : {
          "description" : "مشخصات درخواست پول",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateRequestViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "ساخت درخواست پول جدید با موفقیت انجام شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/RequestResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/request/multi" : {
      "post" : {
        "tags" : [ "Request" ],
        "summary" : "ارسال درخواست پول برای چند نفر",
        "description" : "از این متد برای ارسال لینک درخواست پول برای چند نفر بصورت  پیامک یا ایمیل استفاده می شود",
        "operationId" : "CreateMultiRequest",
        "requestBody" : {
          "description" : "مشخصات درخواست گنندگان پول",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CreateMultiRequestViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "درخواست پول با موفقیت انجام شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/MultiRequestViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/request/{code}/SendReminder" : {
      "post" : {
        "tags" : [ "Request" ],
        "summary" : "یادآوری مجدد درخواست پول",
        "description" : "از این متد برای ارسال مجدد پیامک یا ایمیل لینک درخواست پول استفاده می شود",
        "operationId" : "SendReminder",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کد درخواست",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "یادآوری با موفقیت انجام شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/request/{code}" : {
      "delete" : {
        "tags" : [ "Request" ],
        "summary" : "لغو درخواست پول",
        "description" : "برای لغو کردن یک کد درخواست می توانید از این متد استفاده کنید",
        "operationId" : "CancelRequest",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کد درخواست",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "درخواست با موفقیت کنسل شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/withdraw/{amount}" : {
      "post" : {
        "tags" : [ "Withdraw" ],
        "summary" : "درخواست تسویه حساب",
        "description" : "به کمک این متد می توانید یک درخواست تسویه با مبلغ دلخواه ایجاد نمایید",
        "operationId" : "CreateWithdraw",
        "parameters" : [ {
          "name" : "amount",
          "in" : "path",
          "description" : "مبلغ تسویه حساب",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "تسویه حساب جدید با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithdrawResult"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:write" ]
        }, {
          "oauth2" : [ "pay:write" ]
        } ]
      }
    },
    "/v1/withdraw/{code}" : {
      "get" : {
        "tags" : [ "Withdraw" ],
        "summary" : "نمایش جزئیات درخواست تسویه",
        "description" : "از این متد برای نمایش لیست تسویه ها",
        "operationId" : "GetWithdrawDetails",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کد درخواست تسویه",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "جزئیات تسویه با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/WithdrawDetailsViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "pay:read" ]
        }, {
          "oauth2" : [ "pay:read" ]
        } ]
      }
    },
    "/v1/customer" : {
      "post" : {
        "tags" : [ "Customer" ],
        "summary" : "مشتری جدید",
        "operationId" : "CreateCustomer",
        "requestBody" : {
          "description" : "مشخصات مشتری",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressBookCreateViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش مشخصات مشتری",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressBookDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "customer:write" ]
        }, {
          "oauth2" : [ "customer:write" ]
        } ]
      }
    },
    "/v1/customer/{code}" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "مشخصات مشتری",
        "operationId" : "GetCustomerDetails",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کد مشتری ارسال نمایید",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش مشخصات مشتری",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressBookDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "customer:read" ]
        }, {
          "oauth2" : [ "customer:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Customer" ],
        "summary" : "بروزرسانی مشخصات مشتری",
        "operationId" : "EditCustomer",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتا مشتری",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "مشخصات بروز شده مشتری",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/AddressBookEditViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش مشخصات مشتری",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressBookDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "customer:write" ]
        }, {
          "oauth2" : [ "customer:write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Customer" ],
        "summary" : "حذف مشتری",
        "operationId" : "DeleteCustomer",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتا مشتری",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش کلید یکتای مشتری",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "customer:write" ]
        }, {
          "oauth2" : [ "customer:write" ]
        } ]
      }
    },
    "/v1/customer/List" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "لیست مشتریان",
        "operationId" : "GetCustomerList",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "شروع صفحه از شماره 1",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "تعداد سطر بازگشت داده ها مثال : 10",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "متن مورد نظر جهت جستجو",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerType",
          "in" : "query",
          "description" : "نوع مشتری - حقیقی یا حقوقی",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0,
            "enum" : [ 0, 1, 2 ]
          }
        }, {
          "name" : "withPhoto",
          "in" : "query",
          "description" : "با آدرس تصویر مشتری",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "کد مشتری",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش لیست مشتریان",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/AddressBookListItemViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "customer:read" ]
        }, {
          "oauth2" : [ "customer:read" ]
        } ]
      }
    },
    "/v1/customer/ListCount" : {
      "get" : {
        "tags" : [ "Customer" ],
        "summary" : "تعداد مشتریان",
        "operationId" : "GetCustomerListCount",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "متن مورد نظر جهت جستجو",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "customerType",
          "in" : "query",
          "description" : "نوع مشتری - حقیقی یا حقوقی",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0,
            "enum" : [ 0, 1, 2 ]
          }
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "کد مشتری",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش تعداد مشتریان",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCountViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "customer:read" ]
        }, {
          "oauth2" : [ "customer:read" ]
        } ]
      }
    },
    "/v1/coupon" : {
      "post" : {
        "tags" : [ "coupon" ],
        "summary" : "ساخت یک کد تخفیف جدید",
        "operationId" : "CreateCoupon",
        "requestBody" : {
          "description" : "مشخصات کد تخفیف",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CouponCreateViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "کد تخفیف با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeVM"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "product:write" ]
        }, {
          "oauth2" : [ "product:write" ]
        } ]
      },
      "put" : {
        "tags" : [ "coupon" ],
        "summary" : "بروزرسانی کد تخفیف",
        "operationId" : "EditCoupon",
        "requestBody" : {
          "description" : "مشخصات کد تخفیف",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/CouponEditViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "کد تخفیف با موفقیت بروزرسانی شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "product:write" ]
        }, {
          "oauth2" : [ "product:write" ]
        } ]
      }
    },
    "/v1/coupon/{code}" : {
      "get" : {
        "tags" : [ "coupon" ],
        "summary" : "نمایش یک کد تخفیف",
        "operationId" : "GetCouponDetails",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "شناسه کد تخفیف",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "کد تخفیف با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CouponDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "product:read" ]
        }, {
          "oauth2" : [ "product:read" ]
        } ]
      },
      "delete" : {
        "tags" : [ "coupon" ],
        "summary" : "حذف یک کد تخفیف",
        "operationId" : "DeleteCoupon",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "شناسه کد تخفیف",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "کد تخفیف با موفقیت حذف شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "product:write" ]
        }, {
          "oauth2" : [ "product:write" ]
        } ]
      }
    },
    "/v1/coupon/List" : {
      "get" : {
        "tags" : [ "coupon" ],
        "summary" : "نمایش لیست کدهای تخفیف",
        "operationId" : "GetCouponList",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "شماره ابتدا لیست",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "شماره انتها لیست",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "witharchived",
          "in" : "query",
          "description" : "اضافه شدن کدهای تخفیف‌ آرشیو شده",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "کیلدواژه جستجو در کدهای تخفیف",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "productcode",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "لیست کدهای تخفیف با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/CouponListItemViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "product:read" ]
        }, {
          "oauth2" : [ "product:read" ]
        } ]
      }
    },
    "/v1/coupon/ListCount" : {
      "get" : {
        "tags" : [ "coupon" ],
        "summary" : "دریافت تعداد کدهای تخفیف",
        "operationId" : "GetCouponListCount",
        "parameters" : [ {
          "name" : "witharchived",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "search",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "تعداد کدهای تخفیف با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountVM"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "product:read" ]
        }, {
          "oauth2" : [ "product:read" ]
        } ]
      }
    },
    "/v1/coupon/{couponCode}/BuyersListCount" : {
      "get" : {
        "tags" : [ "coupon" ],
        "summary" : "دریافت تعداد خرید‌های یک کد تخفیف",
        "operationId" : "GetCouponBuyersCount",
        "parameters" : [ {
          "name" : "couponCode",
          "in" : "path",
          "description" : "شناسه کد تخفیف",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "تعداد خریدهای یک کد تخفیف با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CountVM"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "product:read" ]
        }, {
          "oauth2" : [ "product:read" ]
        } ]
      }
    },
    "/v1/coupon/{couponCode}/BuyersList" : {
      "get" : {
        "tags" : [ "coupon" ],
        "summary" : "دریافت لیست پرداخت‌های انجام شده یک کد تخفیف",
        "operationId" : "GetCouponBuyersList",
        "parameters" : [ {
          "name" : "couponCode",
          "in" : "path",
          "description" : "شناسه کد تخفیف",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "شماره ابتدا لیست",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "شماره انتها لیست",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "لیست خریدهای این کد تخفیف با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/BuyerDetailsViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "product:read" ]
        }, {
          "oauth2" : [ "product:read" ]
        } ]
      }
    },
    "/v1/product" : {
      "post" : {
        "tags" : [ "product" ],
        "summary" : "ساخت یک آیتم‌ مالی جدید",
        "operationId" : "CreateProduct",
        "requestBody" : {
          "description" : "مشخصات آیتم مالی",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductCreateViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "آیتم مالی با موفقیت ساخته شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/CodeVM"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "product:write" ]
        }, {
          "oauth2" : [ "product:write" ]
        } ]
      },
      "put" : {
        "tags" : [ "product" ],
        "summary" : "بروزرسانی آیتم مالی",
        "operationId" : "EditProduct",
        "requestBody" : {
          "description" : "مشخصات آیتم مالی",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/ProductEditViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "آیتم‌ مالی با موفقیت بروزرسانی شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "product:write" ]
        }, {
          "oauth2" : [ "product:write" ]
        } ]
      }
    },
    "/v1/product/{code}" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "نمایش یک آیتم مالی",
        "operationId" : "GetProductDetails",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کد آیتم مالی",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "آیتم مالی با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ProductFullDeatilViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "product:read" ]
        }, {
          "oauth2" : [ "product:read" ]
        } ]
      },
      "delete" : {
        "tags" : [ "product" ],
        "summary" : "حذف یک آیتم مالی",
        "operationId" : "DeleteProduct",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کد آیتم مالی",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "آیتم مالی با موفقیت حذف شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "product:write" ]
        }, {
          "oauth2" : [ "product:write" ]
        } ]
      }
    },
    "/v1/product/List" : {
      "get" : {
        "tags" : [ "product" ],
        "summary" : "دریافت لیست آیتم‌های مالی",
        "operationId" : "GetProductList",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "شماره ابتدا لیست",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "شماره انتها لیست",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "witharchived",
          "in" : "query",
          "description" : "اضافه شدن آیتم‌های آرشیو شده",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "کیلدواژه جستجو در آیتم‌های مالی",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "لیست آیتم‌های مالی با موفقیت نمایش داده شد",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/ProductListItemViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "product:read" ]
        }, {
          "oauth2" : [ "product:read" ]
        } ]
      }
    },
    "/v1/Invoice" : {
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "فاکتور جدید",
        "operationId" : "CreateInvoice",
        "requestBody" : {
          "description" : "مشخصات فاکتور",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceCreateViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceDetailViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Invoice/Send/{code}" : {
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "ارسال فاکتور",
        "operationId" : "SendInvoice",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای فاکتور",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش وضعیت ارسال فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceSendInvoiceResponseViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Invoice/{code}" : {
      "put" : {
        "tags" : [ "Invoice" ],
        "summary" : "بروزرسانی فاکتور",
        "operationId" : "EditInvoice",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای فاکتور",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "فاکتور بروز شده",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceEditViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Invoice" ],
        "summary" : "حذف فاکتور",
        "operationId" : "DeleteInvoice",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای فاکتور",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش کلید یکتای فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      },
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "دریافت فاکتور",
        "operationId" : "GetInvoiceDetails",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای فاکتور",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read"  ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Invoice/Pdf/{code}" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "فاکتور غیر رسمی pdf درخواست",
        "operationId" : "GetInvoicePdf",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای فاکتور",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش مشخصات فایل فاکتور غیر رسمی",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoicePdfResponseViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Invoice/Buyer/{code}" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "دریافت مشخصات پرداخت کننده فاکتور",
        "operationId" : "GetInvoiceBuyer",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "مشخصات پرداخت کننده فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/AddressBookDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Invoice/List" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "لیست فاکتور ها",
        "operationId" : "GetInvoiceList",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "فیلتر وضعیت",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          }
        }, {
          "name" : "isArchived",
          "in" : "query",
          "description" : "فیلتر بایگانی",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchByDueDate",
          "in" : "query",
          "description" : "فیلتر با تاریخ سررسید",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchByCreateDate",
          "in" : "query",
          "description" : "فیلتر با تاریخ ثبت",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchDateFrom",
          "in" : "query",
          "description" : "شروع از تاریخ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "searchDateTo",
          "in" : "query",
          "description" : "تا تاریخ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "متن جستجو",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressBookCode",
          "in" : "query",
          "description" : "فیلتر بر اساس کد مشتری",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceCode",
          "in" : "query",
          "description" : "فیلتر براساس کد فاکتور",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش لیست فاکتور ها",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceListItemViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Invoice/ListCount" : {
      "get" : {
        "tags" : [ "Invoice" ],
        "summary" : "تعداد فاکتور ها",
        "operationId" : "GetInvoiceListCount",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "فیلتر وضعیت",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          }
        }, {
          "name" : "isArchived",
          "in" : "query",
          "description" : "فیلتر بایگانی",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchByDueDate",
          "in" : "query",
          "description" : "فیلتر با تاریخ سررسید",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchByCreateDate",
          "in" : "query",
          "description" : "فیلتر با تاریخ ثبت",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchDateFrom",
          "in" : "query",
          "description" : "شروع از تاریخ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "searchDateTo",
          "in" : "query",
          "description" : "تا تاریخ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "متن جستجو",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressBookCode",
          "in" : "query",
          "description" : "فیلتر بر اساس کد مشتری",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceCode",
          "in" : "query",
          "description" : "فیلتر براساس کد فاکتور",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش تعداد فاکتور ها",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCountViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Invoice/Cancel" : {
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "درخواست لغو فاکتور",
        "operationId" : "CancelInvoice",
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceCancelRequest"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceCancelResponse"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Invoice/Reminder/{code}" : {
      "post" : {
        "tags" : [ "Invoice" ],
        "summary" : "ارسال یادآوری فاکتور",
        "operationId" : "RemindeInvoice",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای فاکتور",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش وضعیت ارسال یادآوری فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceSendReminderResponseViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Invoice/Schedule" : {
      "post" : {
        "tags" : [ "Schedule" ],
        "summary" : "فاکتور زمانبندی شده جدید",
        "operationId" : "CreateInvoiceSchedule",
        "requestBody" : {
          "description" : "مشخصات فاکتور زمانبندی شده",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceCreateScheduleViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش فاکتور زمانبندی شده",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Invoice/DeleteSchedule/{code}" : {
      "delete" : {
        "tags" : [ "Schedule" ],
        "summary" : "حذف فاکتور زمانبندی شده",
        "operationId" : "DeleteInvoiceSchedule",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای فاکتور زمانبندی شده",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش کلید یکتای فاکتور زمانبندی شده",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Invoice/Schedule/{code}" : {
      "get" : {
        "tags" : [ "Schedule" ],
        "summary" : "دریافت فاکتور زمانبندی شده",
        "operationId" : "GetInvoiceSchedule",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "فاکتور زمانبندی شده",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ScheduleInvoiceWithChilds"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Invoice/ListSchedule" : {
      "get" : {
        "tags" : [ "Schedule" ],
        "summary" : "لیست فاکتور ها زمانبندی شده",
        "operationId" : "GetInvoiceListSchedule",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "فیلتر وضعیت",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          }
        }, {
          "name" : "isArchived",
          "in" : "query",
          "description" : "فیلتر بایگانی",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchByDueDate",
          "in" : "query",
          "description" : "فیلتر با تاریخ سررسید",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchByCreateDate",
          "in" : "query",
          "description" : "فیلتر با تاریخ ثبت",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchDateFrom",
          "in" : "query",
          "description" : "شروع از تاریخ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "searchDateTo",
          "in" : "query",
          "description" : "تا تاریخ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "متن جستجو",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressBookCode",
          "in" : "query",
          "description" : "فیلتر بر اساس کد مشتری",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceCode",
          "in" : "query",
          "description" : "فیلتر براساس کد فاکتور",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش لیست فاکتور ها زمانبندی شده",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceListItemViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Invoice/ListScheduleCount" : {
      "get" : {
        "tags" : [ "Schedule" ],
        "summary" : "تعداد فاکتور ها زمانبندی شده",
        "operationId" : "GetInvoiceListScheduleCount",
        "parameters" : [ {
          "name" : "status",
          "in" : "query",
          "description" : "فیلتر وضعیت",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 5,
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          }
        }, {
          "name" : "isArchived",
          "in" : "query",
          "description" : "فیلتر بایگانی",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchByDueDate",
          "in" : "query",
          "description" : "فیلتر با تاریخ سررسید",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchByCreateDate",
          "in" : "query",
          "description" : "فیلتر با تاریخ ثبت",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "boolean",
            "default" : false
          }
        }, {
          "name" : "searchDateFrom",
          "in" : "query",
          "description" : "شروع از تاریخ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "searchDateTo",
          "in" : "query",
          "description" : "تا تاریخ",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "متن جستجو",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "addressBookCode",
          "in" : "query",
          "description" : "فیلتر بر اساس کد مشتری",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "invoiceCode",
          "in" : "query",
          "description" : "فیلتر براساس کد فاکتور",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش تعداد فاکتور ها زمانبندی شده",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCountViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Invoice/Subschedulers/{code}" : {
      "get" : {
        "tags" : [ "Schedule" ],
        "summary" : "دریافت اطلاعات زمانبندی شده فاکتور",
        "operationId" : "InvoiceSubschedulers",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "اطلاعات زمانبندی شده فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceSubSchulderDetailViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Template" : {
      "post" : {
        "tags" : [ "Template" ],
        "summary" : "ساخت قالب جدید",
        "operationId" : "CreateTemplate",
        "requestBody" : {
          "description" : "مشخصات قالب",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceTemplateCreateViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش قالب",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceTemplateDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Template/{code}" : {
      "get" : {
        "tags" : [ "Template" ],
        "summary" : "دریافت جزئیات قالب",
        "operationId" : "GetTemplateDetails",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای قالب",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش قالب",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceTemplateDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      },
      "put" : {
        "tags" : [ "Template" ],
        "summary" : "بروزرسانی قالب",
        "operationId" : "EditTemplate",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای قالب",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "قالب بروز شده",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceTemplateEditViewModel"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش قالب",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceTemplateDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      },
      "delete" : {
        "tags" : [ "Template" ],
        "summary" : "حذف قالب",
        "operationId" : "DeleteTemplate",
        "parameters" : [ {
          "name" : "code",
          "in" : "path",
          "description" : "کلید یکتای قالب",
          "required" : true,
          "style" : "simple",
          "explode" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش کلید یکتای قالب",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Template/List" : {
      "get" : {
        "tags" : [ "Template" ],
        "summary" : "لیست قالب ها",
        "operationId" : "GetTemplateList",
        "parameters" : [ {
          "name" : "offset",
          "in" : "query",
          "description" : "شروع صفحه از شماره 1",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 0
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "تعداد سطر بازگشت داده ها مثال : 10",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "integer",
            "format" : "int32",
            "default" : 10
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "متن مورد نظر جهت جستجو",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "کد قالب",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش قالب ها",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceTemplateListItemViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Template/ListCount" : {
      "get" : {
        "tags" : [ "Template" ],
        "summary" : "تعداد قالب ها",
        "operationId" : "GetTemplateListCount",
        "parameters" : [ {
          "name" : "search",
          "in" : "query",
          "description" : "متن مورد نظر جهت جستجو",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "code",
          "in" : "query",
          "description" : "کد قالب",
          "required" : false,
          "style" : "form",
          "explode" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "نمایش تعداد قالب ها",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/ListCountViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:read" ]
        }, {
          "oauth2" : [ "invoice:read" ]
        } ]
      }
    },
    "/v1/Invoice/SendByTemplateAdvance" : {
      "post" : {
        "tags" : [ "Template" ],
        "summary" : "ارسال فاکتور جدید با استفاده از قالب - پیشرفته",
        "operationId" : "InvoiceSendByTemplateAdvance",
        "requestBody" : {
          "description" : "مشخصات فاکتور",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceSendByTemplate"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "uniqueItems" : false,
                  "type" : "array",
                  "items" : {
                    "$ref" : "#/components/schemas/InvoiceDetailViewModel"
                  }
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Invoice/SendByTemplateSimple" : {
      "post" : {
        "tags" : [ "Template" ],
        "summary" : "ارسال فاکتور جدید با استفاده از قالب - سریع",
        "operationId" : "InvoiceSendByTemplateSimple",
        "requestBody" : {
          "description" : "مشخصات فاکتور",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/InvoiceSendByTemplateSimple"
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "نمایش فاکتور",
            "content" : {
              "application/json" : {
                "schema" : {
                  "$ref" : "#/components/schemas/InvoiceDetailViewModel"
                }
              }
            }
          }
        },
        "security" : [ {
          "Bearer" : [ "invoice:write" ]
        }, {
          "oauth2" : [ "invoice:write" ]
        } ]
      }
    },
    "/v1/Upload/ProfilePic" : {
      "post" : {
        "tags" : [ "Upload" ],
        "summary" : "آپلود عکس پروفایل کاربری",
        "description" : "محدودیت‌های فایل‌های ورودی:\r\n\r\nJPG, PNG, JPEG",
        "operationId" : "UploadProfilePic",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UploadProfilePic"
        },
        "responses" : {
          "200" : {
            "description" : "عکس کاربر با موفقیت آپلود شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "upload:write" ]
        }, {
          "oauth2" : [ "upload:write" ]
        } ]
      }
    },
    "/v1/Upload/Item" : {
      "post" : {
        "tags" : [ "Upload" ],
        "summary" : "آپلود عکس یک آیتم‌مالی",
        "description" : "محدودیت‌های فایل‌های ورودی:\r\n\r\nJPG, PNG, JPEG",
        "operationId" : "UploadItem",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UploadProfilePic"
        },
        "responses" : {
          "200" : {
            "description" : "عکس آیتم‌مالی با موفقیت آپلود شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "upload:write" ]
        }, {
          "oauth2" : [ "upload:write" ]
        } ]
      }
    },
    "/v1/Upload/InvoiceAttachment" : {
      "post" : {
        "tags" : [ "Upload" ],
        "summary" : "آپلود فایل‌ ضمیمه یک فاکتور",
        "description" : "محدودیت‌های فایل‌های ورودی:\r\n\r\nمحدودیت ندارد.",
        "operationId" : "UploadInvoiceAttachment",
        "requestBody" : {
          "$ref" : "#/components/requestBodies/UploadProfilePic"
        },
        "responses" : {
          "200" : {
            "description" : "فایل ضمیمه فاکتور با موفقیت آپلود شد"
          }
        },
        "security" : [ {
          "Bearer" : [ "upload:write" ]
        }, {
          "oauth2" : [ "upload:write" ]
        } ]
      }
    }
  },
  "components" : {
    "schemas" : {
      "CreatePaymentViewModel" : {
        "required" : [ "amount", "returnUrl" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "maximum" : 50000000,
            "minimum" : 100,
            "type" : "integer",
            "description" : "مبلغ",
            "format" : "int32"
          },
          "payerIdentity" : {
            "type" : "string",
            "description" : "شماره موبایل یا ایمیل پرداخت کننده"
          },
          "payerName" : {
            "type" : "string",
            "description" : "نام پرداخت کننده"
          },
          "description" : {
            "type" : "string",
            "description" : "توضیحات"
          },
          "returnUrl" : {
            "type" : "string",
            "description" : "آدرس صفحه برگشت"
          },
          "clientRefId" : {
            "type" : "string",
            "description" : "کد ارسالی توسط کاربر"
          }
        }
      },
      "PaymentResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کد پرداخت"
          }
        }
      },
      "CreateMultiPaymentViewModel" : {
        "required" : [ "returnUrl" ],
        "type" : "object",
        "properties" : {
          "payerName" : {
            "type" : "string",
            "description" : "نام پرداخت کننده"
          },
          "pairs" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست پرداخت ها",
            "items" : {
              "$ref" : "#/components/schemas/MultiPayPair"
            }
          },
          "returnUrl" : {
            "type" : "string",
            "description" : "آدرس صفحه برگشت"
          },
          "clientRefId" : {
            "type" : "string",
            "description" : "کد ارسالی توسط کاربر"
          }
        }
      },
      "MultiPayPair" : {
        "required" : [ "amount", "userIdentity" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "description" : "مبلغ",
            "format" : "int32"
          },
          "name" : {
            "type" : "string",
            "description" : "نام"
          },
          "userIdentity" : {
            "type" : "string",
            "description" : "نام کاربری/ایمیل کاربری"
          },
          "description" : {
            "type" : "string",
            "description" : "توضیحات"
          }
        }
      },
      "UnBlockMoneyViewModel" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string",
            "description" : "شناسه مشتری"
          },
          "code" : {
            "type" : "string",
            "description" : "کد پرداخت"
          }
        }
      },
      "VerifyPaymentViewModel" : {
        "required" : [ "amount", "refId" ],
        "type" : "object",
        "properties" : {
          "refId" : {
            "type" : "string",
            "description" : "شماره فاکتور"
          },
          "amount" : {
            "maximum" : 50000000,
            "minimum" : 100,
            "type" : "integer",
            "description" : "مبلغ تراکنش",
            "format" : "int32"
          }
        }
      },
      "IPosPayResult" : {
        "type" : "object",
        "properties" : {
          "itd" : {
            "type" : "integer",
            "format" : "int32"
          },
          "code" : {
            "type" : "string"
          }
        }
      },
      "TransactionReportModel" : {
        "type" : "object",
        "properties" : {
          "offset" : {
            "type" : "integer",
            "description" : "نقطه شروع گزارش",
            "format" : "int32"
          },
          "limit" : {
            "type" : "integer",
            "description" : "نقطه پایان گزارش",
            "format" : "int32"
          },
          "clientsInfos" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست ClientId,ClientInfo",
            "items" : {
              "$ref" : "#/components/schemas/ClientsInfo"
            }
          },
          "filter" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "اعمال فیلتر بر روی فلگ های \r\nکد پرداخت\r\nمبلغ\r\nتاریخ پرداخت\r\nکد ارسالی مشتری به پی پینگ\r\nتوضیحات\r\nنام یا شناسه پرداخت کننده",
            "items" : {
              "type" : "string"
            }
          },
          "transactionType" : {
            "type" : "integer",
            "description" : "نوع تراکنش\r\nدریافت ها =6\r\nپرداخت ها=7",
            "format" : "int32",
            "enum" : [ 6, 7 ]
          },
          "fromDate" : {
            "type" : "string",
            "description" : "تاریخ شروع گزارش",
            "format" : "date-time"
          },
          "toDate" : {
            "type" : "string",
            "description" : "تاریخ پایان گزارش",
            "format" : "date-time"
          }
        }
      },
      "ClientsInfo" : {
        "type" : "object",
        "properties" : {
          "clientId" : {
            "type" : "string"
          },
          "clientRefId" : {
            "type" : "string"
          }
        }
      },
      "TransactionReportViewModel" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "description" : "مبلغ",
            "format" : "int32"
          },
          "payDate" : {
            "type" : "string",
            "description" : "تاریخ پرداخت",
            "format" : "date-time"
          },
          "isPaid" : {
            "type" : "boolean",
            "description" : "اینکه پرداخت تایید شده است"
          },
          "description" : {
            "type" : "string",
            "description" : "توضیحات"
          },
          "name" : {
            "type" : "string",
            "description" : "نام پرداخت کننده/دریافت کننده"
          },
          "payerIdentity" : {
            "type" : "string",
            "description" : "شماره موبایل یا ایمیل پرداخت کننده"
          },
          "isRequest" : {
            "type" : "boolean",
            "description" : "درخواست/پرداخت"
          },
          "code" : {
            "type" : "string",
            "description" : "کد پرداخت"
          },
          "clientId" : {
            "type" : "string",
            "description" : "شناسه زیر سیستم مشتری در پی پینگ"
          },
          "clientRefId" : {
            "type" : "string",
            "description" : "کد ارسالی مشتری به پی پینگ"
          },
          "invoiceNo" : {
            "type" : "string",
            "description" : "شناسه پرداخت"
          },
          "createdDate" : {
            "type" : "string",
            "description" : "تاریخ ساخت پرداخت/درخواست",
            "format" : "date-time"
          }
        }
      },
      "BaseTransactionReport" : {
        "type" : "object",
        "properties" : {
          "clientsInfos" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست ClientId,ClientInfo",
            "items" : {
              "$ref" : "#/components/schemas/ClientsInfo"
            }
          },
          "filter" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "اعمال فیلتر بر روی فلگ های \r\nکد پرداخت\r\nمبلغ\r\nتاریخ پرداخت\r\nکد ارسالی مشتری به پی پینگ\r\nتوضیحات\r\nنام یا شناسه پرداخت کننده",
            "items" : {
              "type" : "string"
            }
          },
          "transactionType" : {
            "type" : "integer",
            "description" : "نوع تراکنش\r\nدریافت ها =6\r\nپرداخت ها=7",
            "format" : "int32",
            "enum" : [ 6, 7 ]
          },
          "fromDate" : {
            "type" : "string",
            "description" : "تاریخ شروع گزارش",
            "format" : "date-time"
          },
          "toDate" : {
            "type" : "string",
            "description" : "تاریخ پایان گزارش",
            "format" : "date-time"
          }
        }
      },
      "ResultVM" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "integer",
            "description" : "تعداد",
            "format" : "int64"
          }
        }
      },
      "TransactionWithdrawDetailsViewModel" : {
        "type" : "object",
        "properties" : {
          "reqDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "code" : {
            "type" : "string"
          },
          "isRepaid" : {
            "type" : "boolean"
          },
          "repayDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PaymentDetailsVM" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "description" : "مبلغ",
            "format" : "int32"
          },
          "reqDate" : {
            "type" : "string",
            "description" : "تاریخ درخواست",
            "format" : "date-time"
          },
          "payDate" : {
            "type" : "string",
            "description" : "تاریخ پرداخت",
            "format" : "date-time"
          },
          "isRequest" : {
            "type" : "boolean",
            "description" : "درخواست/پرداخت"
          },
          "isPaid" : {
            "type" : "boolean",
            "description" : "تاییدیه پرداخت"
          },
          "description" : {
            "type" : "string",
            "description" : "توضیحات"
          },
          "payerIdentity" : {
            "type" : "string",
            "description" : "شماره موبایل یا ایمیل پرداخت کننده"
          },
          "platform" : {
            "type" : "string",
            "description" : "نوع سیستم عامل پرداخت کننده"
          },
          "browser" : {
            "type" : "string",
            "description" : "مرورگر پرداخت کننده"
          },
          "rrn" : {
            "type" : "string",
            "description" : "شماره کارت پرداخت کننده"
          },
          "clientId" : {
            "type" : "string",
            "description" : "شناسه زیر سیستم مشتری در پی پینگ"
          },
          "clientRefId" : {
            "type" : "string",
            "description" : "کد ارسالی مشتری به پی پینگ"
          },
          "invoiceNo" : {
            "type" : "string",
            "description" : "شناسه پرداخت"
          },
          "wage" : {
            "type" : "integer",
            "description" : "کارمزد",
            "format" : "int32"
          },
          "ipgName" : {
            "type" : "string",
            "description" : "درگاه پرداخت کننده"
          },
          "isBlocked" : {
            "type" : "boolean"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "CreateRequestViewModel" : {
        "required" : [ "returnUrl" ],
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "description" : "نام درخواست کننده"
          },
          "amount" : {
            "maximum" : 50000000,
            "minimum" : 100,
            "type" : "integer",
            "description" : "مبلغ",
            "format" : "int32"
          },
          "payerIdentity" : {
            "type" : "string",
            "description" : "شماره موبایل یا ایمیل پرداخت کننده"
          },
          "description" : {
            "type" : "string",
            "description" : "توضیحات"
          },
          "returnUrl" : {
            "type" : "string",
            "description" : "آدرس صفحه برگشت"
          },
          "clientRefId" : {
            "type" : "string",
            "description" : "کد ارسالی توسط کاربر"
          }
        }
      },
      "RequestResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کد درخواست"
          }
        }
      },
      "CreateMultiRequestViewModel" : {
        "required" : [ "returnUrl" ],
        "type" : "object",
        "properties" : {
          "pairs" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست درخواست دهنده ها",
            "items" : {
              "$ref" : "#/components/schemas/MultiPayPair"
            }
          },
          "returnUrl" : {
            "type" : "string",
            "description" : "آدرس صفحه برگشت"
          },
          "clientRefId" : {
            "type" : "string",
            "description" : "کد ارسالی توسط کاربر"
          }
        }
      },
      "MultiRequestViewModel" : {
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string",
            "description" : "نام کاربری"
          },
          "code" : {
            "type" : "string",
            "description" : "کد درخواست"
          }
        }
      },
      "WithdrawResult" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کد تسویه"
          }
        }
      },
      "WithdrawDetailsViewModel" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "description" : "مبلغ",
            "format" : "int32"
          },
          "reqDate" : {
            "type" : "string",
            "description" : "تاریخ درخواست تسویه",
            "format" : "date-time"
          },
          "isRepaid" : {
            "type" : "boolean",
            "description" : "تاییدیه تسویه"
          },
          "repayDate" : {
            "type" : "string",
            "description" : "تاریخ تایید تسویه",
            "format" : "date-time"
          }
        }
      },
      "AddressBookListItemViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتا مشتری"
          },
          "email" : {
            "type" : "string",
            "description" : "پست الکترونیک"
          },
          "phone" : {
            "type" : "string",
            "description" : "تلفن"
          },
          "firstName" : {
            "type" : "string",
            "description" : "نام"
          },
          "lastName" : {
            "type" : "string",
            "description" : "نام خانوادگی"
          },
          "businessName" : {
            "type" : "string",
            "description" : "نام کسب و کار"
          },
          "nationalId" : {
            "type" : "string",
            "description" : "کد ملی/شماره اقتصادی"
          },
          "isBusiness" : {
            "type" : "string",
            "description" : "حقوقی = true, حقیقی = false"
          }
        },
        "description" : "مشخصات مشتری"
      },
      "ListCountViewModel" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AddressBookDetailViewModel" : {
        "required" : [ "code", "firstName", "lastName" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتای مشتری"
          },
          "userPhotoFileAddress" : {
            "type" : "string",
            "description" : "پس از آپلود و دریافت کلید فایل را اینجا قرار دهید"
          },
          "userPhotoFileId" : {
            "type" : "string",
            "description" : "لیست کلیدهای یکتا فایل تصویر پرسنلی"
          },
          "email" : {
            "type" : "string",
            "description" : "پست الکترونیک",
            "example" : "info@example.com"
          },
          "phone" : {
            "type" : "string",
            "description" : "تلفن",
            "example" : "09110000000"
          },
          "firstName" : {
            "type" : "string",
            "description" : "نام",
            "example" : "پوریا"
          },
          "lastName" : {
            "type" : "string",
            "description" : "نام خانوادگی",
            "example" : "منفرد"
          },
          "businessName" : {
            "type" : "string",
            "description" : "نام کسب و کار",
            "example" : "پی پینگ"
          },
          "additionalInfo" : {
            "type" : "string",
            "description" : "اطلاعات اضافی",
            "example" : "او یک وکیل است"
          },
          "memo" : {
            "type" : "string",
            "description" : "یادآوری",
            "example" : "در پی پینگ با ایشان آشنا شدم"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "کدپستی",
            "example" : "46169696164"
          },
          "state" : {
            "type" : "string",
            "description" : "استان",
            "example" : "تهران"
          },
          "city" : {
            "type" : "string",
            "description" : "شهر",
            "example" : "تهران"
          },
          "location" : {
            "type" : "string",
            "description" : "آدرس",
            "example" : "خیابان جمهوری"
          },
          "isBusiness" : {
            "type" : "boolean",
            "description" : "حقوقی = true, حقیقی = false",
            "example" : false
          },
          "nationalId" : {
            "type" : "string",
            "description" : "کد ملی/شماره اقتصادی",
            "example" : "22266655591"
          }
        },
        "description" : "جزییات مشخصات مشتری"
      },
      "AddressBookEditViewModel" : {
        "required" : [ "code", "firstName", "lastName" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتای مشتری"
          },
          "userPhotoFileId" : {
            "type" : "string",
            "description" : "پس از آپلود و دریافت کلید فایل را اینجا قرار دهید"
          },
          "email" : {
            "type" : "string",
            "description" : "پست الکترونیک",
            "example" : "info@example.com"
          },
          "phone" : {
            "type" : "string",
            "description" : "تلفن",
            "example" : "09110000000"
          },
          "firstName" : {
            "type" : "string",
            "description" : "نام",
            "example" : "پوریا"
          },
          "lastName" : {
            "type" : "string",
            "description" : "نام خانوادگی",
            "example" : "منفرد"
          },
          "businessName" : {
            "type" : "string",
            "description" : "نام کسب و کار",
            "example" : "پی پینگ"
          },
          "additionalInfo" : {
            "type" : "string",
            "description" : "اطلاعات اضافی",
            "example" : "او یک وکیل است"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "کدپستی",
            "example" : "46169696164"
          },
          "state" : {
            "type" : "string",
            "description" : "استان",
            "example" : "تهران"
          },
          "city" : {
            "type" : "string",
            "description" : "شهر",
            "example" : "تهران"
          },
          "location" : {
            "type" : "string",
            "description" : "آدرس",
            "example" : "خیابان جمهوری"
          },
          "memo" : {
            "type" : "string",
            "description" : "متن یادآوری",
            "example" : "به او مبلغی بدهکار می باشم"
          },
          "isBusiness" : {
            "type" : "boolean",
            "description" : "حقوقی = true, حقیقی = false",
            "example" : false,
            "default" : false
          },
          "nationalId" : {
            "type" : "string",
            "description" : "کدملی",
            "example" : "22266655591"
          }
        },
        "description" : "بروزرسانی مشتری"
      },
      "AddressBookCreateViewModel" : {
        "required" : [ "firstName", "lastName" ],
        "type" : "object",
        "properties" : {
          "userPhotoFileId" : {
            "type" : "string",
            "description" : "پس از آپلود و دریافت کلید فایل را اینجا قرار دهید"
          },
          "email" : {
            "type" : "string",
            "description" : "پست الکترونیک",
            "example" : "info@example.com"
          },
          "phone" : {
            "type" : "string",
            "description" : "تلفن",
            "example" : "09110000000"
          },
          "firstName" : {
            "type" : "string",
            "description" : "نام",
            "example" : "پوریا"
          },
          "lastName" : {
            "type" : "string",
            "description" : "نام خانوادگی",
            "example" : "منفرد"
          },
          "businessName" : {
            "type" : "string",
            "description" : "نام کسب و کار",
            "example" : "پی پینگ"
          },
          "additionalInfo" : {
            "type" : "string",
            "description" : "اطلاعات اضافی",
            "example" : "او یک وکیل است"
          },
          "zipCode" : {
            "type" : "string",
            "description" : "کدپستی",
            "example" : "46169696164"
          },
          "state" : {
            "type" : "string",
            "description" : "استان",
            "example" : "تهران"
          },
          "city" : {
            "type" : "string",
            "description" : "شهر",
            "example" : "تهران"
          },
          "location" : {
            "type" : "string",
            "description" : "آدرس",
            "example" : "خیابان جمهوری"
          },
          "memo" : {
            "type" : "string",
            "description" : "متن یادآوری",
            "example" : "به او مبلغی بدهکار می باشم"
          },
          "isBusiness" : {
            "type" : "boolean",
            "description" : "حقوقی = true, حقیقی = false",
            "example" : false,
            "default" : false
          },
          "nationalId" : {
            "type" : "string",
            "description" : "کدملی",
            "example" : "22266655591"
          }
        },
        "description" : "ثبت مشتری جدید"
      },
      "InvoiceDashboardReportViewModel" : {
        "type" : "object",
        "properties" : {
          "draftAmount" : {
            "type" : "number",
            "description" : "جمع پیش نویش",
            "format" : "double"
          },
          "paidAmount" : {
            "type" : "number",
            "description" : "جمع پرداخت شده",
            "format" : "double"
          },
          "unpaidAmount" : {
            "type" : "number",
            "description" : "جمع در انتظار پرداخت",
            "format" : "double"
          },
          "expiredAmount" : {
            "type" : "number",
            "description" : "جمع معوق شده",
            "format" : "double"
          },
          "cancelAmount" : {
            "type" : "number",
            "description" : "جمع لغو شده",
            "format" : "double"
          },
          "draftAmountStr" : {
            "type" : "string",
            "description" : "جمع پیش نویش"
          },
          "paidAmountStr" : {
            "type" : "string",
            "description" : "جمع پرداخت شده"
          },
          "unpaidAmountStr" : {
            "type" : "string",
            "description" : "جمع در انتظار پرداخت"
          },
          "expiredAmountStr" : {
            "type" : "string",
            "description" : "جمع معوق شده"
          },
          "cancelAmountStr" : {
            "type" : "string",
            "description" : "جمع لغو شده"
          }
        },
        "description" : "گزارش لیست مبلغ کل فاکتور ها به تفکیک وضعیت"
      },
      "ScheduleInvoiceWithChilds" : {
        "type" : "object",
        "properties" : {
          "parentInvoice" : {
            "$ref" : "#/components/schemas/InvoiceDetailViewModel"
          },
          "childInvoices" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "فاکتورهای ساخته شده توسط فاکتور زمابندی والد",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceDetailViewModel"
            }
          }
        },
        "description" : "جزییات کامل فاکتور زمابندی شده"
      },
      "InvoiceDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتای فاکتور"
          },
          "parentCode" : {
            "type" : "string",
            "description" : "کلید والد بودن فاکتور"
          },
          "paymentCode" : {
            "type" : "string",
            "description" : "کد یکتای پرداخت"
          },
          "ccToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست ایمیل",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceCcToDetailViewModel"
            }
          },
          "billToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست مشتری",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceBillToDetailViewModel"
            }
          },
          "status" : {
            "type" : "integer",
            "description" : "وضعیت فاکتور:\r\n0 = پیش نویس\r\n1 = در انتظار پرداخت\r\n2 = پرداخت شد\r\n3 = معوق\r\n4 = لغو شده\r\n5 = همه",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          },
          "paidManualDescription" : {
            "type" : "string",
            "description" : "شرح پرداخت دستی"
          },
          "saveToTemplate" : {
            "type" : "boolean",
            "description" : "ذخیره به عنوان قالب فاکتور"
          },
          "invoiceNumber" : {
            "type" : "integer",
            "description" : "شماره فاکتور",
            "format" : "int64"
          },
          "invoiceTitle" : {
            "type" : "string",
            "description" : "عنوان فاکتور"
          },
          "invoiceDateTime" : {
            "type" : "string",
            "description" : "تاریخ ثبت",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "description" : "تاریخ سررسید",
            "format" : "date-time"
          },
          "payedDateTime" : {
            "type" : "string",
            "description" : "تاریخ پرداخت",
            "format" : "date-time"
          },
          "canceledDateTime" : {
            "type" : "string",
            "description" : "تاریخ لغو",
            "format" : "date-time"
          },
          "subTotal" : {
            "type" : "number",
            "description" : "جمع مبلغ پرداختی آیتم های مالی",
            "format" : "double"
          },
          "itemsDiscountAmount" : {
            "type" : "number",
            "description" : "جمع مبلغ تخفیف آیتم های مالی",
            "format" : "double"
          },
          "totalDiscountAmount" : {
            "type" : "number",
            "description" : "مبلغ تخفیف به کل فاکتور",
            "format" : "double"
          },
          "totalDiscountPercent" : {
            "type" : "integer",
            "description" : "درصد تخفیف به کل فاکتور",
            "format" : "int32"
          },
          "totalDiscountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف به کل فاکتور:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "sumDiscountAmount" : {
            "type" : "number",
            "description" : "جمع کل تخفیف اعمال شده روی فاکتور",
            "format" : "double"
          },
          "totalTaxtionAmount" : {
            "type" : "number",
            "description" : "مبلغ مالیات",
            "format" : "double"
          },
          "shipping" : {
            "type" : "number",
            "description" : "هزینه حمل و نقل",
            "format" : "double"
          },
          "total" : {
            "type" : "number",
            "description" : "مبلغ کل",
            "format" : "double"
          },
          "notes" : {
            "type" : "string",
            "description" : "پیامی جهت نمایش به پرداخت کننده"
          },
          "termsAndConditions" : {
            "type" : "string",
            "description" : "متن شرایط و قوانین جهت نمایش به پرداخت کننده"
          },
          "memo" : {
            "type" : "string",
            "description" : "متن دلخواه جهت یادآوری فقط برای صادر کننده فاکتور"
          },
          "invoiceSchulder" : {
            "$ref" : "#/components/schemas/InvoiceSchulderDetailViewModel"
          },
          "invoiceItems" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "آیتم های مالی فاکتور",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemDetailViewModel"
            }
          },
          "isSendAttachmentsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش فایل های ضمیمه به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false"
          },
          "isSendNotesAndTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش پیام به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false"
          },
          "isSendTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش متن قوانین و مقررات به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false"
          },
          "attachFileIds" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست کلید یکتای فایل های ضمیمه",
            "items" : {
              "type" : "string"
            }
          },
          "attachFileAddresses" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست آدرس فایل های ضمیمه",
            "items" : {
              "type" : "string"
            }
          },
          "qrCodeFileName" : {
            "type" : "string",
            "description" : "آدرس تصویر بارکد فاکتور"
          }
        },
        "description" : "جزییات فاکتور"
      },
      "InvoiceCcToDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "emailAddress" : {
            "type" : "string",
            "description" : "آدرس ایمیل"
          }
        },
        "description" : "CC"
      },
      "InvoiceBillToDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "addressBook" : {
            "$ref" : "#/components/schemas/AddressBookDetailViewModel"
          }
        },
        "description" : "مشتری یا پرداخت کننده"
      },
      "InvoiceSchulderDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "repeat" : {
            "type" : "integer",
            "description" : "تکرار در هر X روز/هفته/ماه/سال",
            "format" : "int32"
          },
          "schulderType" : {
            "type" : "integer",
            "description" : "نوع زمانبندی:\r\n0 = روزانه\r\n1 = هفتگی\r\n2 = ماهانه\r\n3 = سالانه",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3 ]
          },
          "dueType" : {
            "type" : "integer",
            "description" : "نوع پایان زمانبندی:\r\n0 = پس از ساخت X فاکتور\r\n1 = پایان دادن به ساخت فاکتور در تاریخ X\r\n2 = ساخت نامحدود فاکتور",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "endValue" : {
            "type" : "string",
            "description" : "تعداد/تاریخ پایان، تولید فاکتور"
          },
          "dueDateAfterHowManyDay" : {
            "type" : "integer",
            "description" : "سررسید بعد از X روز",
            "format" : "int32"
          },
          "invoiceSubSchulders" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست دستور ساخت فاکتورهای زمانبندی شده و وضعیت آن ها",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceSubSchulderDetailViewModel"
            }
          }
        },
        "description" : "جزییات اطلاعات ساخت زمانبندی فاکتور"
      },
      "InvoiceItemDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کد یکتا"
          },
          "name" : {
            "type" : "string",
            "description" : "عنوان"
          },
          "description" : {
            "type" : "string",
            "description" : "توضیحات"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "تعداد",
            "format" : "int32"
          },
          "discountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "discountPercent" : {
            "type" : "integer",
            "description" : "درصد تخفیف",
            "format" : "int32"
          },
          "discountAmount" : {
            "type" : "number",
            "description" : "مبلغ تخفیف",
            "format" : "double"
          },
          "tax" : {
            "type" : "boolean",
            "description" : "دارای مالیات = true, نداشتن مالیات = false"
          },
          "taxRate" : {
            "type" : "integer",
            "description" : "مقدار درصد مالیات",
            "format" : "int32"
          },
          "price" : {
            "type" : "number",
            "description" : "مبلغ فی",
            "format" : "double"
          },
          "totalPrice" : {
            "type" : "number",
            "description" : "مبلغ فی - مبلغ تخفیف) * تعداد = مجموع)",
            "format" : "double"
          },
          "amount" : {
            "type" : "number",
            "description" : "مجموع + مالیات = پرداختی",
            "format" : "double"
          }
        },
        "description" : "جزییات آیتم مالی فاکتور"
      },
      "InvoiceSubSchulderDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "dueDate" : {
            "type" : "string",
            "description" : "تاریخ سررسید فاکتوری که باید ساخته شود",
            "format" : "date-time"
          },
          "mustBeCreateInDateTime" : {
            "type" : "string",
            "description" : "تاریخ روزی که فاکتور باید ساخته شود",
            "format" : "date-time"
          },
          "deActiveDateTime" : {
            "type" : "string",
            "description" : "تاریخ غیر فعال شدن ساخت فاکتور",
            "format" : "date-time"
          },
          "isInvoiceCreated" : {
            "type" : "boolean",
            "description" : "ساخته شد = true, در صف انتظار= false"
          },
          "isActive" : {
            "type" : "boolean",
            "description" : "فعال بود = true, غیر فعال = false"
          },
          "invoiceCode" : {
            "type" : "string",
            "description" : "کلید یکتا فاکتور ساخته شده"
          }
        },
        "description" : "جزییات دستور ساخت فاکتورهای زمانبندی شده و وضعیت آن ها"
      },
      "InvoiceListItemViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتای فاکتور"
          },
          "invoiceNumber" : {
            "type" : "integer",
            "description" : "شماره فاکتور",
            "format" : "int64"
          },
          "invoiceDateTime" : {
            "type" : "string",
            "description" : "تاریخ ثبت فاکتور",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "description" : "تاریخ سررسید فاکتور",
            "format" : "date-time"
          },
          "payedDateTime" : {
            "type" : "string",
            "description" : "تاریخ پرداخت",
            "format" : "date-time"
          },
          "canceledDateTime" : {
            "type" : "string",
            "description" : "تاریخ لغو",
            "format" : "date-time"
          },
          "invoiceTitle" : {
            "type" : "string",
            "description" : "عنوان"
          },
          "status" : {
            "type" : "integer",
            "description" : "وضعیت فاکتور\r\n0 = پیش نویس\r\n1 = در انتظار پرداخت\r\n2 = پرداخت شد\r\n3 = معوق\r\n4 = لغو شده\r\n5 = همه",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          },
          "total" : {
            "type" : "number",
            "description" : "مبلغ نهایی یا قابل پرداخت",
            "format" : "double"
          },
          "ccToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "دریافت کننده های ایمیلی",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceCcToListItemViewModel"
            }
          },
          "billToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "دریافت کننده ها - مشتریان",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceBillToListItemViewModel"
            }
          }
        }
      },
      "InvoiceCcToListItemViewModel" : {
        "type" : "object",
        "properties" : {
          "emailAddress" : {
            "type" : "string",
            "description" : "آدرس ایمیل"
          }
        },
        "description" : "CC"
      },
      "InvoiceBillToListItemViewModel" : {
        "type" : "object",
        "properties" : {
          "addressBook" : {
            "$ref" : "#/components/schemas/AddressBookListItemViewModel"
          }
        },
        "description" : "مشتری یا پرداخت کننده"
      },
      "InvoiceEditViewModel" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتای فاکتور"
          },
          "ccToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "ایمیل ها",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceCcToCreateOrUpdateViewModel"
            }
          },
          "billToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "مشتریان",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceBillToCreateOrUpdateViewModel"
            }
          },
          "createStatus" : {
            "type" : "integer",
            "description" : "نوع ثبت:\r\n0 = ذخیره در پیش نویس\r\n1 = ارسال\r\n2 = دستی پرداخت شد",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "paidManualDescription" : {
            "type" : "string",
            "description" : "شرح پرداخت دستی"
          },
          "saveToTemplate" : {
            "type" : "boolean",
            "description" : "ذخیره به عنوان قالب",
            "default" : false
          },
          "templateCode" : {
            "type" : "string",
            "description" : "کد یکتای قالب فاکتور"
          },
          "invoiceNumber" : {
            "type" : "integer",
            "description" : "شماره فاکتور",
            "format" : "int64"
          },
          "invoiceTitle" : {
            "type" : "string",
            "description" : "عنوان فاکتور"
          },
          "invoiceDateTime" : {
            "type" : "string",
            "description" : "تاریخ ثبت",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "description" : "تاریخ سررسید- تاریخی که باید پرداخت صورت پذیرد",
            "format" : "date-time"
          },
          "totalDiscountValue" : {
            "type" : "number",
            "description" : "تخفیف به کل فاکتور",
            "format" : "double"
          },
          "totalDiscountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف به مبلغ یا درصد\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "shipping" : {
            "type" : "number",
            "description" : "هزینه حمل و نقل",
            "format" : "double"
          },
          "notes" : {
            "type" : "string",
            "description" : "متن جهت ارسال به دریافت کننده"
          },
          "termsAndConditions" : {
            "type" : "string",
            "description" : "متن شرایط و قوانین جهت ارسال به دریافت کننده"
          },
          "memo" : {
            "type" : "string",
            "description" : "ایجاد یک متن دلخواه جهت یادآوری فقط برای کاربر ثبت کننده"
          },
          "invoiceItems" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "آیتم های مالی فاکتور",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemCreateViewModel"
            }
          },
          "isSendAttachmentsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش فایل های ضمیمه به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendNotesAndTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش پیام به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش متن قوانین و مقررات به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "attachmentsIds" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "کلید(های) یکتا دریافت شده از سرویس آپلود به صورت آرایه از رشته ها قرار دهید",
            "items" : {
              "type" : "string"
            }
          },
          "isDevicePayment" : {
            "type" : "boolean",
            "description" : "ثبت فاکتور بدون مشتری = true, با مشتری = false",
            "default" : false
          }
        },
        "description" : "بروزرسانی فاکتور ساده"
      },
      "InvoiceCcToCreateOrUpdateViewModel" : {
        "type" : "object",
        "properties" : {
          "emailAddress" : {
            "type" : "string",
            "description" : "آدرس ایمیل"
          }
        },
        "description" : "CC"
      },
      "InvoiceBillToCreateOrUpdateViewModel" : {
        "type" : "object",
        "properties" : {
          "addressBookCode" : {
            "type" : "string",
            "description" : "کلید یکتای مشتری"
          }
        },
        "description" : "ثبت یا بروزرسانی مشتری"
      },
      "InvoiceItemCreateViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتا"
          },
          "name" : {
            "type" : "string",
            "description" : "عنوان"
          },
          "description" : {
            "type" : "string",
            "description" : "توضیحات"
          },
          "tax" : {
            "type" : "boolean",
            "description" : "دارای مالیات = true, نداشتن مالیات = false",
            "default" : false
          },
          "quantity" : {
            "type" : "integer",
            "description" : "تعداد",
            "format" : "int32",
            "default" : 1
          },
          "discountValue" : {
            "type" : "number",
            "description" : "مقدار تخفیف",
            "format" : "double"
          },
          "discountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "discountCouponCode" : {
            "type" : "string",
            "description" : "کد یکتا تخفیف از بخش تخفیف ها"
          },
          "price" : {
            "type" : "number",
            "description" : "مبلغ فی",
            "format" : "double",
            "default" : 0
          }
        },
        "description" : "ثبت آیتم مالی فاکتور"
      },
      "InvoiceSendByTemplate" : {
        "required" : [ "templateCode" ],
        "type" : "object",
        "properties" : {
          "templateCode" : {
            "type" : "string",
            "description" : "کلید یکتای قالب فاکتور"
          },
          "invoiceTitle" : {
            "type" : "string",
            "description" : "عنوان فاکتور"
          },
          "invoiceNumber" : {
            "type" : "integer",
            "description" : "شماره فاکتور",
            "format" : "int64",
            "default" : 1
          },
          "invoiceDateTime" : {
            "type" : "string",
            "description" : "تاریخ ثبت",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "description" : "تاریخ سررسید- تاریخی که باید پرداخت صورت پذیرد",
            "format" : "date-time"
          },
          "ccToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست آدرس ایمیل",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceCcToCreateOrUpdateViewModel"
            }
          },
          "billToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست مشتری",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceBillToCreateOrUpdateViewModel"
            }
          },
          "isDevicePayment" : {
            "type" : "boolean",
            "description" : "ثبت فاکتور بدون مشتری = true, با مشتری = false",
            "default" : false
          }
        },
        "description" : "ثبت فاکتور با استفاده از قالب فاکتور"
      },
      "InvoiceSendByTemplateSimple" : {
        "required" : [ "templateCode" ],
        "type" : "object",
        "properties" : {
          "templateCode" : {
            "type" : "string",
            "description" : "کلید یکتای قالب فاکتور"
          },
          "emailAddresses" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست آدرس ایمیل",
            "items" : {
              "type" : "string"
            }
          },
          "addressBook" : {
            "$ref" : "#/components/schemas/AddressBookCreateViewModel"
          }
        },
        "description" : "ثبت فاکتور با استفاده از قالب فاکتور"
      },
      "InvoiceCreateViewModel" : {
        "type" : "object",
        "properties" : {
          "ccToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "ایمیل ها",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceCcToCreateOrUpdateViewModel"
            }
          },
          "billToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "مشتریان",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceBillToCreateOrUpdateViewModel"
            }
          },
          "createStatus" : {
            "type" : "integer",
            "description" : "نوع ثبت:\r\n0 = ذخیره در پیش نویس\r\n1 = ارسال\r\n2 = دستی پرداخت شد",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "paidManualDescription" : {
            "type" : "string",
            "description" : "شرح پرداخت دستی"
          },
          "saveToTemplate" : {
            "type" : "boolean",
            "description" : "ذخیره به عنوان قالب",
            "default" : false
          },
          "templateCode" : {
            "type" : "string",
            "description" : "کد یکتای قالب فاکتور"
          },
          "invoiceNumber" : {
            "type" : "integer",
            "description" : "شماره فاکتور",
            "format" : "int64"
          },
          "invoiceTitle" : {
            "type" : "string",
            "description" : "عنوان فاکتور"
          },
          "invoiceDateTime" : {
            "type" : "string",
            "description" : "تاریخ ثبت",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "description" : "تاریخ سررسید- تاریخی که باید پرداخت صورت پذیرد",
            "format" : "date-time"
          },
          "totalDiscountValue" : {
            "type" : "number",
            "description" : "تخفیف به کل فاکتور",
            "format" : "double"
          },
          "totalDiscountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف به کل فاکتور:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "shipping" : {
            "type" : "number",
            "description" : "هزینه حمل و نقل",
            "format" : "double"
          },
          "notes" : {
            "type" : "string",
            "description" : "پیامی جهت نمایش به پرداخت کننده"
          },
          "termsAndConditions" : {
            "type" : "string",
            "description" : "متن شرایط و قوانین جهت نمایش به پرداخت کننده"
          },
          "memo" : {
            "type" : "string",
            "description" : "ایجاد یک متن دلخواه جهت یادآوری فقط برای صادر کننده فاکتور"
          },
          "invoiceItems" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "آیتم های مالی فاکتور",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemCreateViewModel"
            }
          },
          "isSendAttachmentsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش فایل های ضمیمه به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendNotesAndTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش پیام به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش متن قوانین و مقررات به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "attachmentsIds" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "کلید(های) یکتا دریافت شده از سرویس آپلود به صورت آرایه از رشته ها قرار دهید",
            "items" : {
              "type" : "string"
            }
          },
          "isDevicePayment" : {
            "type" : "boolean",
            "description" : "ثبت فاکتور بدون مشتری = true, با مشتری = false",
            "default" : false
          }
        },
        "description" : "ثبت فاکتور ساده"
      },
      "InvoiceCreateScheduleViewModel" : {
        "type" : "object",
        "properties" : {
          "ccToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "ایمیل ها",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceCcToCreateOrUpdateViewModel"
            }
          },
          "billToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "مشتریان",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceBillToCreateOrUpdateViewModel"
            }
          },
          "createStatus" : {
            "type" : "integer",
            "description" : "نوع ثبت:\r\n1 = ارسال\r\n2 = دستی پرداخت شد",
            "format" : "int32",
            "enum" : [ 1, 2 ]
          },
          "paidManualDescription" : {
            "type" : "string",
            "description" : "شرح پرداخت دستی"
          },
          "saveToTemplate" : {
            "type" : "boolean",
            "description" : "ذخیره به عنوان قالب",
            "default" : false
          },
          "templateCode" : {
            "type" : "string",
            "description" : "کد یکتای قالب فاکتور"
          },
          "invoiceNumber" : {
            "type" : "integer",
            "description" : "شماره فاکتور",
            "format" : "int64"
          },
          "invoiceTitle" : {
            "type" : "string",
            "description" : "عنوان فاکتور"
          },
          "invoiceDateTime" : {
            "type" : "string",
            "description" : "تاریخ ثبت",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "description" : "تاریخ سررسید- تاریخی که باید پرداخت صورت پذیرد",
            "format" : "date-time"
          },
          "totalDiscountValue" : {
            "type" : "number",
            "description" : "تخفیف به کل فاکتور",
            "format" : "double"
          },
          "totalDiscountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف به کل فاکتور:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "shipping" : {
            "type" : "number",
            "description" : "هزینه حمل و نقل",
            "format" : "double"
          },
          "notes" : {
            "type" : "string",
            "description" : "پیامی جهت نمایش به پرداخت کننده"
          },
          "termsAndConditions" : {
            "type" : "string",
            "description" : "متن شرایط و قوانین جهت نمایش به پرداخت کننده"
          },
          "memo" : {
            "type" : "string",
            "description" : "ایجاد یک متن دلخواه جهت یادآوری فقط برای صادر کننده فاکتور"
          },
          "invoiceSchulder" : {
            "$ref" : "#/components/schemas/InvoiceSchulderCreateOrUpdateViewModel"
          },
          "invoiceItems" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "آیتم های مالی فاکتور",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemCreateViewModel"
            }
          },
          "isSendAttachmentsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش فایل های ضمیمه به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendNotesAndTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش پیام به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش متن قوانین و مقررات به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "attachmentsIds" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "کلید(های) یکتا دریافت شده از سرویس آپلود به صورت آرایه از رشته ها قرار دهید",
            "items" : {
              "type" : "string"
            }
          },
          "isDevicePayment" : {
            "type" : "boolean",
            "description" : "ثبت فاکتور بدون مشتری = true, با مشتری = false",
            "default" : false
          }
        },
        "description" : "ثبت فاکتور زمانبندی شده"
      },
      "InvoiceSchulderCreateOrUpdateViewModel" : {
        "type" : "object",
        "properties" : {
          "repeat" : {
            "type" : "integer",
            "description" : "تکرار در هر X روز/هفته/ماه/سال",
            "format" : "int32",
            "default" : 1
          },
          "schulderType" : {
            "type" : "integer",
            "description" : "نوع زمانبندی:\r\n0 = روزانه\r\n1 = هفتگی\r\n2 = ماهانه\r\n3 = سالانه",
            "format" : "int32",
            "default" : 0,
            "enum" : [ 0, 1, 2, 3 ]
          },
          "dueType" : {
            "type" : "integer",
            "description" : "نوع پایان زمانبندی:\r\n0 = پس از ساخت X فاکتور\r\n1 = پایان دادن به ساخت فاکتور در تاریخ X\r\n2 = ساخت نامحدود فاکتور",
            "format" : "int32",
            "default" : 0,
            "enum" : [ 0, 1, 2 ]
          },
          "endValue" : {
            "type" : "string",
            "description" : "تعداد/تاریخ پایان، تولید فاکتور",
            "default" : "1"
          },
          "dueDateAfterHowManyDay" : {
            "type" : "integer",
            "description" : "سررسید بعد از X روز",
            "format" : "int32",
            "default" : 2
          }
        },
        "description" : "ثبت اطلاعات زمانبندی فاکتور"
      },
      "InvoicePdfResponseViewModel" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "موفقیت آمیز بودن درخواست = true, ناموفق بودن = false"
          },
          "message" : {
            "type" : "string",
            "description" : "پیام خطا یا موفقیت"
          },
          "fileAddress" : {
            "type" : "string",
            "description" : "آدرس فایل"
          }
        },
        "description" : "مشخصات بازگشت درخواست فایل پی دی اف فاکتور"
      },
      "InvoiceCancelRequest" : {
        "required" : [ "code" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "previewKey" : {
            "type" : "string"
          }
        }
      },
      "InvoiceCancelResponse" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتا فاکتور"
          },
          "message" : {
            "type" : "string",
            "description" : "پیام نتیجه انجام درخواست"
          }
        },
        "description" : "بازگشت مشخصات درخواست لغو فاکتور"
      },
      "InvoiceSendReminderResponseViewModel" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "موفقیت آمیز بودن درخواست = true, ناموفق بودن = false"
          },
          "message" : {
            "type" : "string",
            "description" : "پیام خطا یا موفقیت"
          },
          "modelCode" : {
            "type" : "string",
            "description" : "کلید یکتا فاکتور"
          }
        },
        "description" : "بازگشت مشخصات ارسال یادآوری فاکتور"
      },
      "InvoiceSendInvoiceResponseViewModel" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean",
            "description" : "موفقیت آمیز بودن درخواست = true, ناموفق بودن = false"
          },
          "message" : {
            "type" : "string",
            "description" : "پیام خطا یا موفقیت"
          },
          "modelCode" : {
            "type" : "string",
            "description" : "کلید یکتا"
          }
        },
        "description" : "بازگشت مشخصات درخواست ارسال فاکتور"
      },
      "InvoiceSetCustomerRequestViewModel" : {
        "type" : "object",
        "properties" : {
          "invoiceCode" : {
            "type" : "string"
          },
          "customer" : {
            "$ref" : "#/components/schemas/AddressBookCreateViewModel"
          }
        }
      },
      "InvoiceConfirmPaymentResponseViewModel" : {
        "type" : "object",
        "properties" : {
          "success" : {
            "type" : "boolean"
          },
          "message" : {
            "type" : "string"
          },
          "modelCode" : {
            "type" : "string"
          },
          "refId" : {
            "type" : "string"
          },
          "previewKey" : {
            "type" : "string"
          },
          "invoice" : {
            "$ref" : "#/components/schemas/InvoiceInPublicShow"
          }
        }
      },
      "InvoiceInPublicShow" : {
        "type" : "object",
        "properties" : {
          "previewKey" : {
            "type" : "string"
          },
          "invoice" : {
            "$ref" : "#/components/schemas/InvoicePublicDetailViewModel"
          },
          "ownerInfo" : {
            "$ref" : "#/components/schemas/UserInfoInPublicShow"
          }
        }
      },
      "InvoicePublicDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "payedDateTime" : {
            "type" : "string",
            "description" : "تاریخ پرداخت",
            "format" : "date-time"
          },
          "canceledDateTime" : {
            "type" : "string",
            "description" : "تاریخ لغو",
            "format" : "date-time"
          },
          "expiredDateTime" : {
            "type" : "string",
            "description" : "تاریخ معوق شدن",
            "format" : "date-time"
          },
          "code" : {
            "type" : "string",
            "description" : "کلید یکتای فاکتور"
          },
          "parentCode" : {
            "type" : "string",
            "description" : "کلید والد بودن فاکتور"
          },
          "paymentCode" : {
            "type" : "string",
            "description" : "کد یکتای پرداخت"
          },
          "ccToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست ایمیل",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceCcToDetailViewModel"
            }
          },
          "billToes" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست مشتری",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceBillToDetailViewModel"
            }
          },
          "status" : {
            "type" : "integer",
            "description" : "وضعیت فاکتور:\r\n0 = پیش نویس\r\n1 = در انتظار پرداخت\r\n2 = پرداخت شد\r\n3 = معوق\r\n4 = لغو شده\r\n5 = همه",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5 ]
          },
          "paidManualDescription" : {
            "type" : "string",
            "description" : "شرح پرداخت دستی"
          },
          "saveToTemplate" : {
            "type" : "boolean",
            "description" : "ذخیره به عنوان قالب فاکتور"
          },
          "invoiceNumber" : {
            "type" : "integer",
            "description" : "شماره فاکتور",
            "format" : "int64"
          },
          "invoiceTitle" : {
            "type" : "string",
            "description" : "عنوان فاکتور"
          },
          "invoiceDateTime" : {
            "type" : "string",
            "description" : "تاریخ ثبت",
            "format" : "date-time"
          },
          "dueDate" : {
            "type" : "string",
            "description" : "تاریخ سررسید",
            "format" : "date-time"
          },
          "subTotal" : {
            "type" : "number",
            "description" : "جمع مبلغ پرداختی آیتم های مالی",
            "format" : "double"
          },
          "itemsDiscountAmount" : {
            "type" : "number",
            "description" : "جمع مبلغ تخفیف آیتم های مالی",
            "format" : "double"
          },
          "totalDiscountAmount" : {
            "type" : "number",
            "description" : "مبلغ تخفیف به کل فاکتور",
            "format" : "double"
          },
          "totalDiscountPercent" : {
            "type" : "integer",
            "description" : "درصد تخفیف به کل فاکتور",
            "format" : "int32"
          },
          "totalDiscountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف به کل فاکتور:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "sumDiscountAmount" : {
            "type" : "number",
            "description" : "جمع کل تخفیف اعمال شده روی فاکتور",
            "format" : "double"
          },
          "totalTaxtionAmount" : {
            "type" : "number",
            "description" : "مبلغ مالیات",
            "format" : "double"
          },
          "shipping" : {
            "type" : "number",
            "description" : "هزینه حمل و نقل",
            "format" : "double"
          },
          "total" : {
            "type" : "number",
            "description" : "مبلغ کل",
            "format" : "double"
          },
          "notes" : {
            "type" : "string",
            "description" : "پیامی جهت نمایش به پرداخت کننده"
          },
          "termsAndConditions" : {
            "type" : "string",
            "description" : "متن شرایط و قوانین جهت نمایش به پرداخت کننده"
          },
          "memo" : {
            "type" : "string",
            "description" : "متن دلخواه جهت یادآوری فقط برای صادر کننده فاکتور"
          },
          "invoiceSchulder" : {
            "$ref" : "#/components/schemas/InvoiceSchulderDetailViewModel"
          },
          "invoiceItems" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "آیتم های مالی فاکتور",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceItemDetailViewModel"
            }
          },
          "isSendAttachmentsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش فایل های ضمیمه به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false"
          },
          "isSendNotesAndTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش پیام به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false"
          },
          "isSendTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش متن قوانین و مقررات به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false"
          },
          "attachFileIds" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست کلید یکتای فایل های ضمیمه",
            "items" : {
              "type" : "string"
            }
          },
          "attachFileAddresses" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست آدرس فایل های ضمیمه",
            "items" : {
              "type" : "string"
            }
          },
          "qrCodeFileName" : {
            "type" : "string",
            "description" : "آدرس تصویر بارکد فاکتور"
          }
        },
        "description" : "جزییات فاکتور به صورت عمومی"
      },
      "UserInfoInPublicShow" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "profilePicture" : {
            "type" : "string"
          },
          "isBusiness" : {
            "type" : "boolean"
          },
          "verifyType" : {
            "type" : "integer",
            "format" : "int32"
          },
          "socials" : {
            "$ref" : "#/components/schemas/SocialUserInfoExtraViewModel"
          }
        }
      },
      "SocialUserInfoExtraViewModel" : {
        "type" : "object",
        "properties" : {
          "site" : {
            "type" : "string"
          },
          "instagram" : {
            "type" : "string"
          },
          "telegram" : {
            "type" : "string"
          },
          "twitter" : {
            "type" : "string"
          },
          "allSocialIsNull" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "InvoiceTemplateListItemViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتا"
          },
          "templateName" : {
            "type" : "string",
            "description" : "عنوان"
          },
          "hasSchulder" : {
            "type" : "boolean",
            "description" : "دارای زمانبندی = true, بدون زمانبندی = false"
          }
        },
        "description" : "مشخصات قالب فاکتور"
      },
      "InvoiceTemplateDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کد یکتا"
          },
          "templateName" : {
            "type" : "string",
            "description" : "عنوان"
          },
          "subTotal" : {
            "type" : "number",
            "description" : "جمع مبلغ پرداختی آیتم های مالی",
            "format" : "double"
          },
          "itemsDiscountAmount" : {
            "type" : "number",
            "description" : "جمع مبلغ تخفیف آیتم های مالی",
            "format" : "double"
          },
          "totalDiscountAmount" : {
            "type" : "number",
            "description" : "جمع مبلغ تخفیف آیتم های مالی",
            "format" : "double"
          },
          "totalDiscountPercent" : {
            "type" : "integer",
            "description" : "درصد تخفیف به کل فاکتور",
            "format" : "int32"
          },
          "totalDiscountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف به کل فاکتور:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "sumDiscountAmount" : {
            "type" : "number",
            "description" : "جمع کل تخفیف اعمال شده روی فاکتور",
            "format" : "double"
          },
          "totalTaxtionAmount" : {
            "type" : "number",
            "description" : "مبلغ مالیات",
            "format" : "double"
          },
          "shipping" : {
            "type" : "number",
            "description" : "مبلغ حمل و نقل",
            "format" : "double"
          },
          "total" : {
            "type" : "number",
            "description" : "مبلغ کل",
            "format" : "double"
          },
          "notes" : {
            "type" : "string",
            "description" : "پیامی جهت نمایش به پرداخت کننده"
          },
          "termsAndConditions" : {
            "type" : "string",
            "description" : "متن شرایط و قوانین جهت نمایش به پرداخت کننده"
          },
          "memo" : {
            "type" : "string",
            "description" : "متن دلخواه جهت یادآوری فقط برای صادر کننده فاکتور"
          },
          "invoiceTemplateItems" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "آیتم های مالی فاکتور",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceTemplateItemIndexViewModel"
            }
          },
          "invoiceSchulder" : {
            "$ref" : "#/components/schemas/InvoiceTemplateSchulderIndexViewModel"
          },
          "isSendAttachmentsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش فایل های ضمیمه به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false"
          },
          "isSendNotesAndTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش پیام به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false"
          },
          "isSendTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش متن قوانین و مقررات به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false"
          },
          "attachFileIds" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست کلید یکتای فایل های ضمیمه",
            "items" : {
              "type" : "string"
            }
          },
          "attachFileAddresses" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "لیست آدرس فایل های ضمیمه",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "جزییات قالب فاکتور"
      },
      "InvoiceTemplateItemIndexViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کد یکتا"
          },
          "name" : {
            "type" : "string",
            "description" : "عنوان"
          },
          "description" : {
            "type" : "string",
            "description" : "توضیحات"
          },
          "quantity" : {
            "type" : "integer",
            "description" : "تعداد",
            "format" : "int32"
          },
          "discountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "discountPercent" : {
            "type" : "integer",
            "description" : "درصد تخفیف",
            "format" : "int32"
          },
          "discountAmount" : {
            "type" : "number",
            "description" : "مبلغ تخفیف",
            "format" : "double"
          },
          "tax" : {
            "type" : "boolean",
            "description" : "دارای مالیات = true, نداشتن مالیات = false"
          },
          "taxRate" : {
            "type" : "integer",
            "description" : "مقدار درصد مالیات",
            "format" : "int32"
          },
          "price" : {
            "type" : "number",
            "description" : "مبلغ فی",
            "format" : "double"
          },
          "totalPrice" : {
            "type" : "number",
            "description" : "مبلغ فی - مبلغ تخفیف) * تعداد = مجموع)",
            "format" : "double"
          },
          "amount" : {
            "type" : "number",
            "description" : "مجموع + مالیات = پرداختی",
            "format" : "double"
          }
        },
        "description" : "جزییات آیتم مالی قالب فاکتور"
      },
      "InvoiceTemplateSchulderIndexViewModel" : {
        "type" : "object",
        "properties" : {
          "repeat" : {
            "type" : "integer",
            "description" : "تکرار در هر X روز/هفته/ماه/سال",
            "format" : "int32",
            "default" : 1
          },
          "schulderType" : {
            "type" : "integer",
            "description" : "نوع زمانبندی:\r\n0 = روزانه\r\n1 = هفتگی\r\n2 = ماهانه\r\n3 = سالانه",
            "format" : "int32",
            "default" : 0,
            "enum" : [ 0, 1, 2, 3 ]
          },
          "dueType" : {
            "type" : "integer",
            "description" : "نوع پایان زمانبندی:\r\n0 = پس از ساخت X فاکتور\r\n1 = پایان دادن به ساخت فاکتور در تاریخ X\r\n2 = ساخت نامحدود فاکتور",
            "format" : "int32",
            "default" : 0,
            "enum" : [ 0, 1, 2 ]
          },
          "endValue" : {
            "type" : "string",
            "description" : "تعداد/تاریخ پایان، تولید فاکتور",
            "default" : "1"
          },
          "dueDateAfterHowManyDay" : {
            "type" : "integer",
            "description" : "سررسید بعد از X روز",
            "format" : "int32",
            "default" : 2
          }
        },
        "description" : "جزییات مشخصات ساخت زمانبندی قالب فاکتور"
      },
      "InvoiceTemplateEditViewModel" : {
        "required" : [ "code", "templateName" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتای فاکتور"
          },
          "templateName" : {
            "type" : "string",
            "description" : "عنوان"
          },
          "totalDiscountValue" : {
            "type" : "integer",
            "description" : "تخفیف به کل فاکتور",
            "format" : "int32"
          },
          "totalDiscountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف به کل فاکتور:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "shipping" : {
            "type" : "number",
            "description" : "هزینه حمل و نقل",
            "format" : "double"
          },
          "notes" : {
            "type" : "string",
            "description" : "پیامی جهت نمایش به پرداخت کننده"
          },
          "termsAndConditions" : {
            "type" : "string",
            "description" : "متن شرایط و قوانین جهت نمایش به پرداخت کننده"
          },
          "memo" : {
            "type" : "string",
            "description" : "ایجاد یک متن دلخواه جهت یادآوری فقط برای صادر کننده فاکتور"
          },
          "invoiceSchulder" : {
            "$ref" : "#/components/schemas/InvoiceTemplateSchulderCreateOrUpdateViewModel"
          },
          "invoiceTemplateItems" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "آیتم های مالی فاکتور",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceTemplateItemCreateViewModel"
            }
          },
          "isSendAttachmentsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش فایل های ضمیمه به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendNotesAndTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش پیام به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش متن قوانین و مقررات به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "attachmentsIds" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "کلید(های) یکتا دریافت شده از سرویس آپلود به صورت آرایه از رشته ها قرار دهید",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "بروزرسانی قالب فاکتور"
      },
      "InvoiceTemplateSchulderCreateOrUpdateViewModel" : {
        "type" : "object",
        "properties" : {
          "repeat" : {
            "type" : "integer",
            "description" : "تکرار در هر X روز/هفته/ماه/سال",
            "format" : "int32",
            "default" : 1
          },
          "schulderType" : {
            "type" : "integer",
            "description" : "نوع زمانبندی:\r\n0 = روزانه\r\n1 = هفتگی\r\n2 = ماهانه\r\n3 = سالانه",
            "format" : "int32",
            "default" : 0,
            "enum" : [ 0, 1, 2, 3 ]
          },
          "dueType" : {
            "type" : "integer",
            "description" : "نوع پایان زمانبندی:\r\n0 = پس از ساخت X فاکتور\r\n1 = پایان دادن به ساخت فاکتور در تاریخ X\r\n2 = ساخت نامحدود فاکتور",
            "format" : "int32",
            "default" : 0,
            "enum" : [ 0, 1, 2 ]
          },
          "endValue" : {
            "type" : "string",
            "description" : "تعداد/تاریخ پایان، تولید فاکتور",
            "default" : "1"
          },
          "dueDateAfterHowManyDay" : {
            "type" : "integer",
            "description" : "سررسید بعد از X روز",
            "format" : "int32",
            "default" : 2
          }
        },
        "description" : "ثبت اطلاعات زمانبندی قالب فاکتور"
      },
      "InvoiceTemplateItemCreateViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string",
            "description" : "کلید یکتا"
          },
          "name" : {
            "type" : "string",
            "description" : "عنوان"
          },
          "description" : {
            "type" : "string",
            "description" : "توضیحات"
          },
          "tax" : {
            "type" : "boolean",
            "description" : "دارای مالیات = true, نداشتن مالیات = false",
            "default" : false
          },
          "quantity" : {
            "type" : "integer",
            "description" : "تعداد",
            "format" : "int32",
            "default" : 1
          },
          "discountValue" : {
            "type" : "number",
            "description" : "مقدار تخفیف",
            "format" : "double"
          },
          "discountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "discountCouponCode" : {
            "type" : "string",
            "description" : "کد یکتا تخفیف از بخش تخفیف ها"
          },
          "price" : {
            "type" : "number",
            "description" : "مبلغ فی",
            "format" : "double",
            "default" : 0
          }
        },
        "description" : "ثبت آیتم مالی قالب فاکتور"
      },
      "InvoiceTemplateCreateViewModel" : {
        "required" : [ "templateName" ],
        "type" : "object",
        "properties" : {
          "templateName" : {
            "type" : "string",
            "description" : "عنوان"
          },
          "totalDiscountValue" : {
            "type" : "integer",
            "description" : "تخفیف به کل فاکتور",
            "format" : "int32"
          },
          "totalDiscountType" : {
            "type" : "integer",
            "description" : "نوع تخفیف به کل فاکتور:\r\n0 = مبلغ\r\n1 = درصد",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "shipping" : {
            "type" : "number",
            "description" : "هزینه حمل و نقل",
            "format" : "double"
          },
          "notes" : {
            "type" : "string",
            "description" : "پیامی جهت نمایش به پرداخت کننده"
          },
          "termsAndConditions" : {
            "type" : "string",
            "description" : "متن شرایط و قوانین جهت نمایش به پرداخت کننده"
          },
          "memo" : {
            "type" : "string",
            "description" : "ایجاد یک متن دلخواه جهت یادآوری فقط برای صادر کننده فاکتور"
          },
          "invoiceSchulder" : {
            "$ref" : "#/components/schemas/InvoiceTemplateSchulderCreateOrUpdateViewModel"
          },
          "invoiceTemplateItems" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "آیتم های مالی فاکتور",
            "items" : {
              "$ref" : "#/components/schemas/InvoiceTemplateItemCreateViewModel"
            }
          },
          "isSendAttachmentsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش فایل های ضمیمه به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendNotesAndTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش پیام به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "isSendTermsAfterPayment" : {
            "type" : "boolean",
            "description" : "نمایش متن قوانین و مقررات به پرداخت کننده پس از پرداخت موفق = true, نمایش در قبل و بعد از پرداخت = false",
            "default" : false
          },
          "attachmentsIds" : {
            "uniqueItems" : false,
            "type" : "array",
            "description" : "کلید(های) یکتا دریافت شده از سرویس آپلود به صورت آرایه از رشته ها قرار دهید",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "قالب فاکتور جدید"
      },
      "ServiceViewModel" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "serviceType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]
          }
        }
      },
      "BaseIntegration" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "createDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "serviceType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 ]
          }
        }
      },
      "IdentityResult" : {
        "type" : "object",
        "properties" : {
          "succeeded" : {
            "type" : "boolean",
            "readOnly" : true
          },
          "errors" : {
            "type" : "array",
            "readOnly" : true,
            "items" : {
              "$ref" : "#/components/schemas/IdentityError"
            }
          }
        }
      },
      "IdentityError" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          }
        }
      },
      "RegisterWithClient" : {
        "required" : [ "birthDay", "cardNumber", "email", "firstName", "lastName", "nationalCode", "password", "phoneNumber", "shaba", "username" ],
        "type" : "object",
        "properties" : {
          "username" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "birthDay" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nationalCode" : {
            "type" : "string"
          },
          "cardNumber" : {
            "type" : "string"
          },
          "shaba" : {
            "type" : "string"
          }
        }
      },
      "PersonalInfoViewModel" : {
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "nationalCode" : {
            "type" : "string"
          },
          "birthday" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "UpdateUserCategoryVm" : {
        "type" : "object",
        "properties" : {
          "businessDescription" : {
            "type" : "string"
          },
          "subCategoryId" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "AddBusinessinfoVm" : {
        "type" : "object",
        "properties" : {
          "businessName" : {
            "type" : "string"
          },
          "businessDescription" : {
            "type" : "string"
          },
          "isBusinessMoreThan6Mil" : {
            "type" : "boolean"
          },
          "isOfficialSubmited" : {
            "type" : "boolean"
          },
          "bNationalCode" : {
            "type" : "string"
          },
          "sabtNumber" : {
            "type" : "string"
          },
          "economicCode" : {
            "type" : "string"
          }
        }
      },
      "AddPersonalinfoVm" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "phoneNumber" : {
            "type" : "string"
          },
          "localPhone" : {
            "type" : "string"
          },
          "birthDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nationalcode" : {
            "type" : "string"
          },
          "state" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          }
        }
      },
      "UpdatePersonalinfoVm" : {
        "type" : "object",
        "properties" : {
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "birthDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "nationalcode" : {
            "type" : "string"
          }
        }
      },
      "BankViewModel" : {
        "type" : "object",
        "properties" : {
          "shaba" : {
            "type" : "string"
          },
          "shabaVerifyed" : {
            "type" : "boolean"
          }
        }
      },
      "AddPhoneNumberViewModel" : {
        "required" : [ "number" ],
        "type" : "object",
        "properties" : {
          "number" : {
            "type" : "string"
          },
          "isVerifyed" : {
            "type" : "boolean"
          }
        }
      },
      "AddLocalPhoneNumberViewModel" : {
        "required" : [ "localPhone" ],
        "type" : "object",
        "properties" : {
          "localPhone" : {
            "maxLength" : 11,
            "minLength" : 11,
            "type" : "string"
          }
        }
      },
      "EditLocalInfoesViewModel" : {
        "required" : [ "address", "city", "postalCode", "state" ],
        "type" : "object",
        "properties" : {
          "state" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "address" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          }
        }
      },
      "SocialUserExtraViewModel" : {
        "type" : "object",
        "properties" : {
          "businessDescription" : {
            "type" : "string"
          },
          "site" : {
            "type" : "string"
          },
          "instagram" : {
            "type" : "string"
          },
          "telegram" : {
            "type" : "string"
          },
          "twitter" : {
            "type" : "string"
          },
          "allSocialIsNull" : {
            "type" : "boolean",
            "readOnly" : true
          }
        }
      },
      "CouponCreateViewModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "userCouponCode" : {
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "redeemDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "redeemTime" : {
            "type" : "string"
          },
          "maxRedemption" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "activeProductCode" : {
            "uniqueItems" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CodeVM" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          }
        }
      },
      "CouponEditViewModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "userCouponCode" : {
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "code" : {
            "type" : "string"
          },
          "redeemDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "redeemTime" : {
            "type" : "string"
          },
          "maxRedemption" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "activeProductCode" : {
            "uniqueItems" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }
      },
      "CouponDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "code" : {
            "type" : "string"
          },
          "redeemDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "redeemTime" : {
            "type" : "string"
          },
          "maxRedemption" : {
            "type" : "integer",
            "format" : "int32"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "activeProductCode" : {
            "type" : "string"
          },
          "isArchived" : {
            "type" : "boolean"
          },
          "userCouponCode" : {
            "type" : "string"
          },
          "buyerCounts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "buyerSum" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CouponListItemViewModel" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "type" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "code" : {
            "type" : "string"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "activeProductCode" : {
            "type" : "string"
          },
          "activeProductName" : {
            "uniqueItems" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "userCouponCode" : {
            "type" : "string"
          },
          "amountDisplay" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "CountVM" : {
        "type" : "object",
        "properties" : {
          "count" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "BuyerDetailsViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "addressLine" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "customDescription" : {
            "type" : "string"
          },
          "permanLinkCode" : {
            "type" : "string"
          },
          "productInfo" : {
            "$ref" : "#/components/schemas/ProductInfo"
          },
          "couponCode" : {
            "type" : "string"
          },
          "productCode" : {
            "type" : "string"
          },
          "campaignCode" : {
            "type" : "string"
          },
          "isPaid" : {
            "type" : "boolean"
          },
          "payerId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "invoiceNo" : {
            "type" : "string"
          },
          "payDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "fullName" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "ProductInfo" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "realAmount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PayDirectVM" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "string"
          },
          "product" : {
            "$ref" : "#/components/schemas/ProductFullDeatilViewModel"
          },
          "userData" : {
            "$ref" : "#/components/schemas/PUserData"
          },
          "payCode" : {
            "type" : "string"
          }
        }
      },
      "ProductFullDeatilViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unlimited" : {
            "type" : "boolean"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defineAmountByUser" : {
            "type" : "boolean"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "isArchived" : {
            "type" : "boolean"
          },
          "haveTax" : {
            "type" : "boolean"
          },
          "tax" : {
            "type" : "integer",
            "format" : "int32",
            "readOnly" : true
          },
          "imageLink" : {
            "type" : "string"
          },
          "imageId" : {
            "type" : "string"
          },
          "category" : {
            "$ref" : "#/components/schemas/CategoryMinorDetailVM"
          }
        }
      },
      "PUserData" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string"
          },
          "userName" : {
            "type" : "string"
          },
          "profilePicture" : {
            "type" : "string"
          },
          "isBusiness" : {
            "type" : "boolean"
          },
          "verifyType" : {
            "type" : "string"
          },
          "socials" : {
            "$ref" : "#/components/schemas/PSocialUserExtraViewModel"
          },
          "customFrontPay" : {
            "$ref" : "#/components/schemas/CustomFrontPay"
          },
          "maxPaymntAmount" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "CategoryMinorDetailVM" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "PSocialUserExtraViewModel" : {
        "type" : "object",
        "properties" : {
          "site" : {
            "type" : "string"
          },
          "instagram" : {
            "type" : "string"
          },
          "telegram" : {
            "type" : "string"
          },
          "twitter" : {
            "type" : "string"
          },
          "allSocialIsNull" : {
            "type" : "boolean"
          }
        }
      },
      "CustomFrontPay" : {
        "type" : "object",
        "properties" : {
          "bgImage" : {
            "type" : "string"
          },
          "themeColor" : {
            "type" : "string"
          },
          "bgColor" : {
            "type" : "string"
          },
          "priceColor" : {
            "type" : "string"
          },
          "backImageType" : {
            "type" : "string"
          }
        }
      },
      "VerfyPermaVM" : {
        "type" : "object",
        "properties" : {
          "payCode" : {
            "type" : "string"
          },
          "clientRefId" : {
            "type" : "string"
          },
          "refId" : {
            "type" : "string"
          }
        }
      },
      "PayReportViewModel" : {
        "type" : "object",
        "properties" : {
          "product" : {
            "$ref" : "#/components/schemas/ProductDetailViewModel"
          },
          "permanentLink" : {
            "$ref" : "#/components/schemas/PermanentDetailViewModel"
          },
          "buyer" : {
            "$ref" : "#/components/schemas/BuyerDetailsViewModel"
          },
          "pdfLink" : {
            "type" : "string"
          }
        }
      },
      "ProductDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "code" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defineAmountByUser" : {
            "type" : "boolean"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unlimited" : {
            "type" : "boolean"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "isArchived" : {
            "type" : "boolean"
          },
          "haveTax" : {
            "type" : "boolean"
          },
          "imageLink" : {
            "type" : "string"
          }
        }
      },
      "PermanentDetailViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "redirectPage" : {
            "type" : "string"
          },
          "getAddress" : {
            "type" : "boolean"
          },
          "userId" : {
            "type" : "integer",
            "format" : "int32"
          },
          "mailerLiteListId" : {
            "type" : "string"
          },
          "smsText" : {
            "type" : "string"
          },
          "customDescriptionText" : {
            "type" : "string"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "isArchived" : {
            "type" : "boolean"
          },
          "emailOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "phoneOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "nameOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "customDesOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "clientId" : {
            "type" : "string"
          },
          "clientRefId" : {
            "type" : "string"
          },
          "qrLink" : {
            "type" : "string"
          },
          "permanentType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "buyerCounts" : {
            "type" : "integer",
            "format" : "int32"
          },
          "buyerSum" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "PayGetViewModel" : {
        "type" : "object",
        "properties" : {
          "emailOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "phoneOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "nameOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "customDesOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "customDescriptionText" : {
            "type" : "string"
          },
          "getAddress" : {
            "type" : "boolean"
          },
          "haveCoupon" : {
            "type" : "boolean"
          },
          "amount" : {
            "type" : "string"
          },
          "realAmount" : {
            "type" : "string"
          },
          "product" : {
            "$ref" : "#/components/schemas/ProductFullDeatilViewModel"
          },
          "userData" : {
            "$ref" : "#/components/schemas/PUserData"
          }
        }
      },
      "PermanentPaymentViewModel" : {
        "type" : "object",
        "properties" : {
          "productCode" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "string"
          },
          "addressLine" : {
            "type" : "string"
          },
          "postalCode" : {
            "type" : "string"
          },
          "city" : {
            "type" : "string"
          },
          "firstName" : {
            "type" : "string"
          },
          "lastName" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "fullName" : {
            "type" : "string",
            "readOnly" : true
          },
          "customDescription" : {
            "type" : "string"
          },
          "couponCode" : {
            "type" : "string"
          }
        }
      },
      "CouponViewModel" : {
        "required" : [ "couponCode" ],
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "couponCode" : {
            "pattern" : "^[a-zA-Z0-9]+$",
            "type" : "string"
          },
          "productCode" : {
            "type" : "string"
          }
        }
      },
      "CouponResultVM" : {
        "type" : "object",
        "properties" : {
          "result" : {
            "type" : "string"
          },
          "newAmount" : {
            "type" : "string"
          },
          "couponCode" : {
            "type" : "string"
          },
          "isSuccess" : {
            "type" : "boolean"
          }
        }
      },
      "PermanentCreateViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "redirectPage" : {
            "type" : "string"
          },
          "getAddress" : {
            "type" : "boolean"
          },
          "mailerLiteListId" : {
            "type" : "string"
          },
          "smsText" : {
            "type" : "string"
          },
          "customDescriptionText" : {
            "type" : "string"
          },
          "emailOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "phoneOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "nameOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "customDesOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "clientId" : {
            "type" : "string"
          },
          "clientRefId" : {
            "type" : "string"
          },
          "permanentType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        }
      },
      "PermanentEditViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "redirectPage" : {
            "type" : "string"
          },
          "getAddress" : {
            "type" : "boolean"
          },
          "mailerLiteListId" : {
            "type" : "string"
          },
          "smsText" : {
            "type" : "string"
          },
          "customDescriptionText" : {
            "type" : "string"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "emailOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "phoneOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "nameOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "customDesOption" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1, 2 ]
          },
          "permanentType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          }
        }
      },
      "PermanentListItemViewModel" : {
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "customDescriptionText" : {
            "type" : "string"
          },
          "isActive" : {
            "type" : "boolean"
          },
          "permanentType" : {
            "type" : "integer",
            "format" : "int32",
            "enum" : [ 0, 1 ]
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defineAmountByUser" : {
            "type" : "boolean"
          },
          "itemIsActive" : {
            "type" : "boolean"
          },
          "itemIsAvailable" : {
            "type" : "boolean"
          }
        }
      },
      "ProductBuyerViewModel" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "fullName" : {
            "type" : "string"
          },
          "customDescription" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "payDate" : {
            "type" : "string",
            "format" : "date-time"
          },
          "amountDisplay" : {
            "type" : "string",
            "readOnly" : true
          },
          "payDateDisplay" : {
            "type" : "string",
            "readOnly" : true
          },
          "phoneVM" : {
            "type" : "string",
            "readOnly" : true
          }
        }
      },
      "ProductCreateViewModel" : {
        "required" : [ "title" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defineAmountByUser" : {
            "type" : "boolean"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "haveTax" : {
            "type" : "boolean"
          },
          "unlimited" : {
            "type" : "boolean"
          },
          "imageLink" : {
            "type" : "string"
          }
        }
      },
      "ProductEditViewModel" : {
        "required" : [ "amount", "title" ],
        "type" : "object",
        "properties" : {
          "code" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "defineAmountByUser" : {
            "type" : "boolean"
          },
          "haveTax" : {
            "type" : "boolean"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unlimited" : {
            "type" : "boolean"
          },
          "imageLink" : {
            "type" : "string"
          }
        }
      },
      "ProductListItemViewModel" : {
        "type" : "object",
        "properties" : {
          "amount" : {
            "type" : "integer",
            "format" : "int32"
          },
          "title" : {
            "type" : "string"
          },
          "code" : {
            "type" : "string"
          },
          "quantity" : {
            "type" : "integer",
            "format" : "int32"
          },
          "unlimited" : {
            "type" : "boolean"
          },
          "defineAmountByUser" : {
            "type" : "boolean"
          },
          "amountDisplay" : {
            "type" : "string",
            "readOnly" : true
          },
          "quantityVM" : {
            "type" : "string",
            "readOnly" : true
          },
          "isActive" : {
            "type" : "boolean"
          },
          "haveTax" : {
            "type" : "boolean"
          },
          "havePerma" : {
            "type" : "boolean"
          }
        }
      }
    },
    "requestBodies" : {
      "BaseTransactionReport" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/BaseTransactionReport"
            }
          }
        }
      },
      "UploadProfilePic" : {
        "content" : {
          "multipart/form-data" : {
            "schema" : {
              "required" : [ "file" ],
              "type" : "object",
              "properties" : {
                "file" : {
                  "type" : "string",
                  "description" : "بارگزاری فایل",
                  "format" : "binary"
                }
              }
            }
          }
        }
      },
      "CreatePaymentViewModel" : {
        "description" : "مشخصات پرداخت",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreatePaymentViewModel"
            }
          }
        }
      },
      "CreateMultiPaymentViewModel" : {
        "description" : "مشخصات پرداخت",
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/CreateMultiPaymentViewModel"
            }
          }
        }
      },
      "TransactionReportModel" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/TransactionReportModel"
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "Bearer" : {
        "type" : "apiKey",
        "description" : "برای احراز هویت در سرویس‌های مختلف باید از توکن Bearer در header درخواست‌ها به صورت زیر استفاده کنید \n\n\n ساختار ارسال توکن: (Bearer TOKEN) \n\n\n  اگر شما یک اپلیکیشن و یا وب‌سایت شخصی دارید و قصد استفاده از سرویس‌های مالی ما را برای خود دارید می‌بایست از access token استفاده کنید،  جهت مطالعه روند دریافت آن از کنسول توسعه‌دهنده،   [لطفا اینجا کلیک نمایید.](https://www.payping.ir/oauth.html#accesstoken)",
        "name" : "Authorization",
        "in" : "header"
      },
      "oauth2" : {
        "type" : "oauth2",
        "description" : "اما اگر وب‌سایت و اپلیکیشن شما قصد دسترسی به اطلاعات سایر کاربران پی‌پینگ را دارد، شما می‌بایست از سرویس OAuth ما استفاده کنید که به شما اجازه یک احراز هویت امن با استفاده از یک متد استاندارد و ساده به اپلیکیشن‌های وب، موبایل و دسکتاپ میدهد. جهت مطالعه روند اعطای دسترسی و روند کار [لطفا اینجا کلیک نمایید.](https://www.payping.ir/oauth.html#accesstoken)",
        "flows" : {
          "authorizationCode" : {
            "authorizationUrl" : "https://oauth.payping.ir/connect/authorize",
            "tokenUrl" : "https://oauth.payping.ir/connect/token",
            "scopes" : {
              "profile" : "دسترسی مرتبط با تمام اطلاعات یک کاربر",
              "email" : "دسترسی به مشاهده ایمیل",
              "nationalcode" : "دسترسی به مشاهده کدملی کاربر",
              "birthday" : "دسترسی به مشاهده تاریخ تولد کاربر",
              "shaba" : "دسترسی به مشاهده شبای بانکی کاربر",
              "phone" : "دسترسی به مشاهده شماره تماس کاربر",
              "pay:read" : "دسترسی فقط خواندنی در سرویس پرداخت",
              "pay:write" : "دسترسی نوشتن و تغییرات در سرویس پرداخت",
              "product:read" : "دسترسی فقط خواندنی در سرویس آیتم‌های مالی",
              "product:write" : "دسترسی نوشتن و تغییرات در سرویس آیتم‌های مالی",
              "customer:read" : "دسترسی فقط خواندنی به سرویس مشتریان",
              "customer:write" : "دسترسی نوشتن و تغییرات در سرویس مشتریان",
              "invoice:read" : "دسترسی فقط خواندنی به سرویس فاکتور ها",
              "invoice:write" : "دسترسی نوشتن و تغییرات در سرویس فاکتور ها",
              "upload:write" : "دسترسی مرتبط با سرویس بارگذاری فایل‌ها"
            }
          }
        }
      }
    }
  },
  "x-tagGroups" : [ {
    "name" : "سرویس پرداخت",
    "tags" : [ "Payment", "Request", "Withdraw", "Report", "Pos" ]
  }, {
    "name" : "سرویس مشتریان",
    "tags" : [ "Customer" ]
  }, {
    "name" : "سرویس آیتم‌های مالی",
    "tags" : [ "product", "permaLink", "coupon" ]
  }, {
    "name" : "سرویس فاکتور",
    "tags" : [ "Invoice", "Schedule", "Template" ]
  }, {
    "name" : "سرویس آپلود فایل",
    "tags" : [ "Upload" ]
  } ]
}